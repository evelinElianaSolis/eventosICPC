{"ast":null,"code":"var hasOwn = require('./hasOwn');\nvar deepClone = require('../lang/deepClone');\nvar isObject = require('../lang/isObject');\n\n/**\n * Deep merge objects.\n */\nfunction merge() {\n  var i = 1,\n    key,\n    val,\n    obj,\n    target;\n\n  // make sure we don't modify source element and it's properties\n  // objects are passed by reference\n  target = deepClone(arguments[0]);\n  while (obj = arguments[i++]) {\n    for (key in obj) {\n      if (!hasOwn(obj, key)) {\n        continue;\n      }\n      val = obj[key];\n      if (isObject(val) && isObject(target[key])) {\n        // inception, deep merge objects\n        target[key] = merge(target[key], val);\n      } else {\n        // make sure arrays, regexp, date, objects are cloned\n        target[key] = deepClone(val);\n      }\n    }\n  }\n  return target;\n}\nmodule.exports = merge;","map":{"version":3,"names":["hasOwn","require","deepClone","isObject","merge","i","key","val","obj","target","arguments","module","exports"],"sources":["C:/Users/Evita/Desktop/PruebaTis/eventosICPC/frontend/node_modules/mout/object/merge.js"],"sourcesContent":["var hasOwn = require('./hasOwn');\nvar deepClone = require('../lang/deepClone');\nvar isObject = require('../lang/isObject');\n\n    /**\n     * Deep merge objects.\n     */\n    function merge() {\n        var i = 1,\n            key, val, obj, target;\n\n        // make sure we don't modify source element and it's properties\n        // objects are passed by reference\n        target = deepClone( arguments[0] );\n\n        while (obj = arguments[i++]) {\n            for (key in obj) {\n                if ( ! hasOwn(obj, key) ) {\n                    continue;\n                }\n\n                val = obj[key];\n\n                if ( isObject(val) && isObject(target[key]) ){\n                    // inception, deep merge objects\n                    target[key] = merge(target[key], val);\n                } else {\n                    // make sure arrays, regexp, date, objects are cloned\n                    target[key] = deepClone(val);\n                }\n\n            }\n        }\n\n        return target;\n    }\n\n    module.exports = merge;\n\n\n"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAChC,IAAIC,SAAS,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AAC5C,IAAIE,QAAQ,GAAGF,OAAO,CAAC,kBAAkB,CAAC;;AAEtC;AACJ;AACA;AACI,SAASG,KAAKA,CAAA,EAAG;EACb,IAAIC,CAAC,GAAG,CAAC;IACLC,GAAG;IAAEC,GAAG;IAAEC,GAAG;IAAEC,MAAM;;EAEzB;EACA;EACAA,MAAM,GAAGP,SAAS,CAAEQ,SAAS,CAAC,CAAC,CAAE,CAAC;EAElC,OAAOF,GAAG,GAAGE,SAAS,CAACL,CAAC,EAAE,CAAC,EAAE;IACzB,KAAKC,GAAG,IAAIE,GAAG,EAAE;MACb,IAAK,CAAER,MAAM,CAACQ,GAAG,EAAEF,GAAG,CAAC,EAAG;QACtB;MACJ;MAEAC,GAAG,GAAGC,GAAG,CAACF,GAAG,CAAC;MAEd,IAAKH,QAAQ,CAACI,GAAG,CAAC,IAAIJ,QAAQ,CAACM,MAAM,CAACH,GAAG,CAAC,CAAC,EAAE;QACzC;QACAG,MAAM,CAACH,GAAG,CAAC,GAAGF,KAAK,CAACK,MAAM,CAACH,GAAG,CAAC,EAAEC,GAAG,CAAC;MACzC,CAAC,MAAM;QACH;QACAE,MAAM,CAACH,GAAG,CAAC,GAAGJ,SAAS,CAACK,GAAG,CAAC;MAChC;IAEJ;EACJ;EAEA,OAAOE,MAAM;AACjB;AAEAE,MAAM,CAACC,OAAO,GAAGR,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}