{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evita\\\\Desktop\\\\TIS0.2\\\\AdministradorDeEventos\\\\frontend\\\\src\\\\components\\\\FormularioParticipante.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SuccessMessage = ({\n  message\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: 'green',\n      color: 'white',\n      padding: '10px',\n      margin: '10px 0',\n      borderRadius: '5px'\n    },\n    children: [message, /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 5\n  }, this);\n};\n_c = SuccessMessage;\nconst RegistroForm = () => {\n  _s();\n  const [registroExitoso, setRegistroExitoso] = useState(false);\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Lógica de registro exitoso (puede ser una llamada a una API, etc.)\n\n    // Después de un registro exitoso, muestra el mensaje\n    setRegistroExitoso(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Registrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), registroExitoso && /*#__PURE__*/_jsxDEV(SuccessMessage, {\n      message: \"\\xA1Registro exitoso!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(RegistroForm, \"3j8iihZrmeP+knTsbmqYEqE9ZnQ=\");\n_c2 = RegistroForm;\nexport default RegistroForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"SuccessMessage\");\n$RefreshReg$(_c2, \"RegistroForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SuccessMessage","message","style","backgroundColor","color","padding","margin","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","RegistroForm","_s","registroExitoso","setRegistroExitoso","handleSubmit","e","preventDefault","onSubmit","type","_c2","$RefreshReg$"],"sources":["C:/Users/Evita/Desktop/TIS0.2/AdministradorDeEventos/frontend/src/components/FormularioParticipante.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nconst SuccessMessage = ({ message }) => {\r\n  return (\r\n    <div style={{ backgroundColor: 'green', color: 'white', padding: '10px', margin: '10px 0', borderRadius: '5px' }}>\r\n      {message}\r\n      <div>\r\n        \r\n      </div>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst RegistroForm = () => {\r\n  const [registroExitoso, setRegistroExitoso] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Lógica de registro exitoso (puede ser una llamada a una API, etc.)\r\n    \r\n    // Después de un registro exitoso, muestra el mensaje\r\n    setRegistroExitoso(true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        \r\n\r\n        <button type=\"submit\">Registrar</button>\r\n      </form>\r\n\r\n      {registroExitoso && <SuccessMessage message=\"¡Registro exitoso!\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegistroForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACxC,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAQ,CAAC,KAAK;EACtC,oBACEF,OAAA;IAAKG,KAAK,EAAE;MAAEC,eAAe,EAAE,OAAO;MAAEC,KAAK,EAAE,OAAO;MAAEC,OAAO,EAAE,MAAM;MAAEC,MAAM,EAAE,QAAQ;MAAEC,YAAY,EAAE;IAAM,CAAE;IAAAC,QAAA,GAC9GP,OAAO,eACRF,OAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAGV,CAAC;AAACC,EAAA,GAVIb,cAAc;AAiBpB,MAAMc,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMqB,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;;IAElB;;IAEA;IACAH,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,oBACElB,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAMsB,QAAQ,EAAEH,YAAa;MAAAV,QAAA,eAG3BT,OAAA;QAAQuB,IAAI,EAAC,QAAQ;QAAAd,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,EAENI,eAAe,iBAAIjB,OAAA,CAACC,cAAc;MAACC,OAAO,EAAC;IAAoB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEV,CAAC;AAACG,EAAA,CAvBID,YAAY;AAAAS,GAAA,GAAZT,YAAY;AAyBlB,eAAeA,YAAY;AAAC,IAAAD,EAAA,EAAAU,GAAA;AAAAC,YAAA,CAAAX,EAAA;AAAAW,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}