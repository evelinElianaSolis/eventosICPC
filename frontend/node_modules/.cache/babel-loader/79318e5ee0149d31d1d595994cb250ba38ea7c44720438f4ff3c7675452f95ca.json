{"ast":null,"code":"var hasOwn = require('./hasOwn');\nvar _hasDontEnumBug, _dontEnums;\nfunction checkDontEnum() {\n  _dontEnums = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor'];\n  _hasDontEnumBug = true;\n  for (var key in {\n    'toString': null\n  }) {\n    _hasDontEnumBug = false;\n  }\n}\n\n/**\n * Similar to Array/forEach but works over object properties and fixes Don't\n * Enum bug on IE.\n * based on: http://whattheheadsaid.com/2010/10/a-safer-object-keys-compatibility-implementation\n */\nfunction forIn(obj, fn, thisObj) {\n  var key,\n    i = 0;\n  // no need to check if argument is a real object that way we can use\n  // it for arrays, functions, date, etc.\n\n  //post-pone check till needed\n  if (_hasDontEnumBug == null) checkDontEnum();\n  for (key in obj) {\n    if (exec(fn, obj, key, thisObj) === false) {\n      break;\n    }\n  }\n  if (_hasDontEnumBug) {\n    var ctor = obj.constructor,\n      isProto = !!ctor && obj === ctor.prototype;\n    while (key = _dontEnums[i++]) {\n      // For constructor, if it is a prototype object the constructor\n      // is always non-enumerable unless defined otherwise (and\n      // enumerated above).  For non-prototype objects, it will have\n      // to be defined on this object, since it cannot be defined on\n      // any prototype objects.\n      //\n      // For other [[DontEnum]] properties, check if the value is\n      // different than Object prototype value.\n      if ((key !== 'constructor' || !isProto && hasOwn(obj, key)) && obj[key] !== Object.prototype[key]) {\n        if (exec(fn, obj, key, thisObj) === false) {\n          break;\n        }\n      }\n    }\n  }\n}\nfunction exec(fn, obj, key, thisObj) {\n  return fn.call(thisObj, obj[key], key, obj);\n}\nmodule.exports = forIn;","map":{"version":3,"names":["hasOwn","require","_hasDontEnumBug","_dontEnums","checkDontEnum","key","forIn","obj","fn","thisObj","i","exec","ctor","constructor","isProto","prototype","Object","call","module","exports"],"sources":["C:/Users/Evita/Desktop/PruebaTis/eventosICPC/frontend/node_modules/mout/object/forIn.js"],"sourcesContent":["var hasOwn = require('./hasOwn');\n\n    var _hasDontEnumBug,\n        _dontEnums;\n\n    function checkDontEnum(){\n        _dontEnums = [\n                'toString',\n                'toLocaleString',\n                'valueOf',\n                'hasOwnProperty',\n                'isPrototypeOf',\n                'propertyIsEnumerable',\n                'constructor'\n            ];\n\n        _hasDontEnumBug = true;\n\n        for (var key in {'toString': null}) {\n            _hasDontEnumBug = false;\n        }\n    }\n\n    /**\n     * Similar to Array/forEach but works over object properties and fixes Don't\n     * Enum bug on IE.\n     * based on: http://whattheheadsaid.com/2010/10/a-safer-object-keys-compatibility-implementation\n     */\n    function forIn(obj, fn, thisObj){\n        var key, i = 0;\n        // no need to check if argument is a real object that way we can use\n        // it for arrays, functions, date, etc.\n\n        //post-pone check till needed\n        if (_hasDontEnumBug == null) checkDontEnum();\n\n        for (key in obj) {\n            if (exec(fn, obj, key, thisObj) === false) {\n                break;\n            }\n        }\n\n\n        if (_hasDontEnumBug) {\n            var ctor = obj.constructor,\n                isProto = !!ctor && obj === ctor.prototype;\n\n            while (key = _dontEnums[i++]) {\n                // For constructor, if it is a prototype object the constructor\n                // is always non-enumerable unless defined otherwise (and\n                // enumerated above).  For non-prototype objects, it will have\n                // to be defined on this object, since it cannot be defined on\n                // any prototype objects.\n                //\n                // For other [[DontEnum]] properties, check if the value is\n                // different than Object prototype value.\n                if (\n                    (key !== 'constructor' ||\n                        (!isProto && hasOwn(obj, key))) &&\n                    obj[key] !== Object.prototype[key]\n                ) {\n                    if (exec(fn, obj, key, thisObj) === false) {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n\n    function exec(fn, obj, key, thisObj){\n        return fn.call(thisObj, obj[key], key, obj);\n    }\n\n    module.exports = forIn;\n\n\n"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAE5B,IAAIC,eAAe,EACfC,UAAU;AAEd,SAASC,aAAaA,CAAA,EAAE;EACpBD,UAAU,GAAG,CACL,UAAU,EACV,gBAAgB,EAChB,SAAS,EACT,gBAAgB,EAChB,eAAe,EACf,sBAAsB,EACtB,aAAa,CAChB;EAELD,eAAe,GAAG,IAAI;EAEtB,KAAK,IAAIG,GAAG,IAAI;IAAC,UAAU,EAAE;EAAI,CAAC,EAAE;IAChCH,eAAe,GAAG,KAAK;EAC3B;AACJ;;AAEA;AACJ;AACA;AACA;AACA;AACI,SAASI,KAAKA,CAACC,GAAG,EAAEC,EAAE,EAAEC,OAAO,EAAC;EAC5B,IAAIJ,GAAG;IAAEK,CAAC,GAAG,CAAC;EACd;EACA;;EAEA;EACA,IAAIR,eAAe,IAAI,IAAI,EAAEE,aAAa,CAAC,CAAC;EAE5C,KAAKC,GAAG,IAAIE,GAAG,EAAE;IACb,IAAII,IAAI,CAACH,EAAE,EAAED,GAAG,EAAEF,GAAG,EAAEI,OAAO,CAAC,KAAK,KAAK,EAAE;MACvC;IACJ;EACJ;EAGA,IAAIP,eAAe,EAAE;IACjB,IAAIU,IAAI,GAAGL,GAAG,CAACM,WAAW;MACtBC,OAAO,GAAG,CAAC,CAACF,IAAI,IAAIL,GAAG,KAAKK,IAAI,CAACG,SAAS;IAE9C,OAAOV,GAAG,GAAGF,UAAU,CAACO,CAAC,EAAE,CAAC,EAAE;MAC1B;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,IACI,CAACL,GAAG,KAAK,aAAa,IACjB,CAACS,OAAO,IAAId,MAAM,CAACO,GAAG,EAAEF,GAAG,CAAE,KAClCE,GAAG,CAACF,GAAG,CAAC,KAAKW,MAAM,CAACD,SAAS,CAACV,GAAG,CAAC,EACpC;QACE,IAAIM,IAAI,CAACH,EAAE,EAAED,GAAG,EAAEF,GAAG,EAAEI,OAAO,CAAC,KAAK,KAAK,EAAE;UACvC;QACJ;MACJ;IACJ;EACJ;AACJ;AAEA,SAASE,IAAIA,CAACH,EAAE,EAAED,GAAG,EAAEF,GAAG,EAAEI,OAAO,EAAC;EAChC,OAAOD,EAAE,CAACS,IAAI,CAACR,OAAO,EAAEF,GAAG,CAACF,GAAG,CAAC,EAAEA,GAAG,EAAEE,GAAG,CAAC;AAC/C;AAEAW,MAAM,CAACC,OAAO,GAAGb,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}