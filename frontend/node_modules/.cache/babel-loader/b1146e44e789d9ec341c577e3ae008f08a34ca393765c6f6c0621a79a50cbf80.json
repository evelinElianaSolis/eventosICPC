{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evita\\\\Desktop\\\\PruebaTis\\\\eventosICPC\\\\frontend\\\\src\\\\components\\\\ModalPersonaEncontrada.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './assets/ModalPersonaEncontrada.css';\n\n// Importa la función para enviar el correo\nimport enviarCorreo from './utils/EnviarCorreo'; // Ajusta la ruta según sea necesario\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Modal = ({\n  isOpen,\n  closeModal,\n  handleYes,\n  handleNo,\n  datos\n}) => {\n  _s();\n  const [codigo, setCodigo] = useState('');\n  const [codigoEnviado, setCodigoEnviado] = useState(false);\n  const [errorCodigo, setErrorCodigo] = useState('');\n  const [codigoIngresado, setCodigoIngresado] = useState('');\n  const [mostrarInput, setMostrarInput] = useState(false);\n\n  // Función para enviar el código al correo\n  const generarCodigo = () => {\n    // Genera un número entre 0 y 99999, luego convierte a cadena\n    const codigo = Math.floor(Math.random() * 100000).toString();\n\n    // Asegura que el código tenga 5 dígitos, rellenando con ceros si es necesario\n    return codigo.padStart(5, '0');\n  };\n  const enviarCodigo = async () => {\n    setCodigo(generarCodigo());\n    try {\n      await enviarCorreo(datos.correo, 'Tu Código de Verificación', `Tu código es: ${codigo}`);\n      setCodigoEnviado(true);\n      setMostrarInput(true);\n    } catch (error) {\n      console.error('Error al enviar el correo', error);\n    }\n  };\n\n  // Función para manejar la verificación del código\n  const verificarCodigo = () => {\n    if (codigo === codigoIngresado) {\n      // Aquí debes verificar contra el código real que enviaste\n      handleYes();\n      closeModal();\n    } else {\n      setErrorCodigo('El código ingresado no es correcto.');\n    }\n  };\n  if (!isOpen) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.modalContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modalContent,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\xBFUd. ya se ha registrado a un evento ICPC antes?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\" Este es su correo: \", datos.correo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), !codigoEnviado ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.botonOk,\n          onClick: enviarCodigo,\n          children: \"Enviar c\\xF3digo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.botonOk,\n          onClick: handleNo,\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: styles.inputCodigo,\n          placeholder: \"Ingrese el c\\xF3digo\",\n          value: codigoIngresado,\n          onChange: e => setCodigoIngresado(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.botonOk,\n          onClick: verificarCodigo,\n          children: \"Verificar C\\xF3digo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true), errorCodigo && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles.error,\n        children: errorCodigo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.cerrar,\n        onClick: closeModal,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(Modal, \"ZS3FMaPVUkhx+AdAvW29vqUoRtw=\");\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useState","styles","enviarCorreo","jsxDEV","_jsxDEV","Fragment","_Fragment","Modal","isOpen","closeModal","handleYes","handleNo","datos","_s","codigo","setCodigo","codigoEnviado","setCodigoEnviado","errorCodigo","setErrorCodigo","codigoIngresado","setCodigoIngresado","mostrarInput","setMostrarInput","generarCodigo","Math","floor","random","toString","padStart","enviarCodigo","correo","error","console","verificarCodigo","className","modalContainer","children","modalContent","fileName","_jsxFileName","lineNumber","columnNumber","botonOk","onClick","type","inputCodigo","placeholder","value","onChange","e","target","cerrar","_c","$RefreshReg$"],"sources":["C:/Users/Evita/Desktop/PruebaTis/eventosICPC/frontend/src/components/ModalPersonaEncontrada.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styles from './assets/ModalPersonaEncontrada.css';\r\n\r\n// Importa la función para enviar el correo\r\nimport enviarCorreo from './utils/EnviarCorreo'; // Ajusta la ruta según sea necesario\r\n\r\nconst Modal = ({ isOpen, closeModal, handleYes, handleNo, datos }) => {\r\n  const [codigo, setCodigo] = useState('');\r\n  const [codigoEnviado, setCodigoEnviado] = useState(false);\r\n  const [errorCodigo, setErrorCodigo] = useState('');\r\n  const [codigoIngresado, setCodigoIngresado] = useState('');\r\n  const [mostrarInput, setMostrarInput] = useState(false);\r\n\r\n  // Función para enviar el código al correo\r\n  const generarCodigo = () => {\r\n    // Genera un número entre 0 y 99999, luego convierte a cadena\r\n    const codigo = Math.floor(Math.random() * 100000).toString();\r\n  \r\n    // Asegura que el código tenga 5 dígitos, rellenando con ceros si es necesario\r\n    return codigo.padStart(5, '0');\r\n  };\r\n  \r\n  const enviarCodigo = async () => {\r\n\r\n    setCodigo(generarCodigo());\r\n\r\n  \r\n    try {\r\n      await enviarCorreo(datos.correo, 'Tu Código de Verificación', `Tu código es: ${codigo}`);\r\n      setCodigoEnviado(true);\r\n      setMostrarInput(true);\r\n    } catch (error) {\r\n      console.error('Error al enviar el correo', error);\r\n    }\r\n  };\r\n\r\n  // Función para manejar la verificación del código\r\n  const verificarCodigo = () => {\r\n    if (codigo === codigoIngresado) { // Aquí debes verificar contra el código real que enviaste\r\n      handleYes();\r\n      closeModal();\r\n    } else {\r\n      setErrorCodigo('El código ingresado no es correcto.');\r\n    }\r\n  };\r\n\r\n  if (!isOpen) {\r\n    return null;\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={styles.modalContainer}>\r\n        <div className={styles.modalContent}>\r\n            {/* Contenido del Modal */}\r\n            <h2>¿Ud. ya se ha registrado a un evento ICPC antes?</h2>\r\n            <strong> Este es su correo: {datos.correo}</strong>\r\n            {!codigoEnviado ? (\r\n                <>\r\n                    <button className={styles.botonOk} onClick={enviarCodigo}>Enviar código</button>\r\n                    <button className={styles.botonOk} onClick={handleNo}>No</button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={styles.inputCodigo}\r\n                        placeholder=\"Ingrese el código\"\r\n                        value={codigoIngresado}\r\n                        onChange={(e) => setCodigoIngresado(e.target.value)}\r\n                    />\r\n                    <button className={styles.botonOk} onClick={verificarCodigo}>Verificar Código</button>\r\n                </>\r\n            )}\r\n            {errorCodigo && <p className={styles.error}>{errorCodigo}</p>}\r\n            <span className={styles.cerrar} onClick={closeModal}>&times;</span>\r\n        </div>\r\n    </div>\r\n);\r\n};\r\n\r\nexport default Modal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}