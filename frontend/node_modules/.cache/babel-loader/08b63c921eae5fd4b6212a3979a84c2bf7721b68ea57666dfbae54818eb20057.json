{"ast":null,"code":"var slice = require('../array/slice');\n\n/**\r\n * Return a function that will execute in the given context, optionally adding any additional supplied parameters to the beginning of the arguments collection.\r\n * @param {Function} fn  Function.\r\n * @param {object} context   Execution context.\r\n * @param {rest} args    Arguments (0...n arguments).\r\n * @return {Function} Wrapped Function.\r\n */\nfunction bind(fn, context, args) {\n  var argsArr = slice(arguments, 2); //curried args\n  return function () {\n    return fn.apply(context, argsArr.concat(slice(arguments)));\n  };\n}\nmodule.exports = bind;","map":{"version":3,"names":["slice","require","bind","fn","context","args","argsArr","arguments","apply","concat","module","exports"],"sources":["C:/Users/Jonatan/Desktop/Nueva carpeta (5)/eventosICPC/frontend/node_modules/mout/function/bind.js"],"sourcesContent":["var slice = require('../array/slice');\r\n\r\n    /**\r\n     * Return a function that will execute in the given context, optionally adding any additional supplied parameters to the beginning of the arguments collection.\r\n     * @param {Function} fn  Function.\r\n     * @param {object} context   Execution context.\r\n     * @param {rest} args    Arguments (0...n arguments).\r\n     * @return {Function} Wrapped Function.\r\n     */\r\n    function bind(fn, context, args){\r\n        var argsArr = slice(arguments, 2); //curried args\r\n        return function(){\r\n            return fn.apply(context, argsArr.concat(slice(arguments)));\r\n        };\r\n    }\r\n\r\n    module.exports = bind;\r\n\r\n\r\n"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,gBAAgB,CAAC;;AAEjC;AACJ;AACA;AACA;AACA;AACA;AACA;AACI,SAASC,IAAIA,CAACC,EAAE,EAAEC,OAAO,EAAEC,IAAI,EAAC;EAC5B,IAAIC,OAAO,GAAGN,KAAK,CAACO,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;EACnC,OAAO,YAAU;IACb,OAAOJ,EAAE,CAACK,KAAK,CAACJ,OAAO,EAAEE,OAAO,CAACG,MAAM,CAACT,KAAK,CAACO,SAAS,CAAC,CAAC,CAAC;EAC9D,CAAC;AACL;AAEAG,MAAM,CAACC,OAAO,GAAGT,IAAI"},"metadata":{},"sourceType":"script","externalDependencies":[]}