{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evita\\\\Desktop\\\\TIS0.2\\\\AdministradorDeEventos\\\\frontend\\\\src\\\\components\\\\CalendarioDesplegable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport '../components/assets/MyCalendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\nconst MiCalendario = ({\n  fechaInicio,\n  fechaFin\n}) => {\n  _s();\n  const [eventos, setEventos] = useState([{\n    title: 'Evento 1',\n    start: new Date(2023, 11, 20, 10, 0),\n    // Fecha y hora de inicio\n    end: new Date(2024, 0, 10, 12, 0) // Fecha y hora de fin\n  }\n  // Agrega más eventos según tus necesidades\n  ]);\n\n  const startDate = new Date(fechaInicio);\n  const endDate = new Date(fechaFin);\n  const eventStyleGetter = event => {\n    const backgroundColor = event.start >= startDate && event.end <= endDate ? 'red' : '';\n    const classNames = backgroundColor ? 'within-range' : '';\n    return {\n      style: {\n        backgroundColor: backgroundColor\n      },\n      className: classNames\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mi-contenedor\",\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: eventos,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      className: \"mi-calendario\",\n      views: ['month', 'agenda'],\n      toolbar: true,\n      eventPropGetter: eventStyleGetter // Añade esta prop para modificar el estilo de los eventos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(MiCalendario, \"Pbf1SyqeW4IBhk1G0Wblw1V0apg=\");\n_c = MiCalendario;\nexport default MiCalendario;\nvar _c;\n$RefreshReg$(_c, \"MiCalendario\");","map":{"version":3,"names":["React","useState","Calendar","momentLocalizer","moment","jsxDEV","_jsxDEV","localizer","MiCalendario","fechaInicio","fechaFin","_s","eventos","setEventos","title","start","Date","end","startDate","endDate","eventStyleGetter","event","backgroundColor","classNames","style","className","children","events","startAccessor","endAccessor","views","toolbar","eventPropGetter","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Evita/Desktop/TIS0.2/AdministradorDeEventos/frontend/src/components/CalendarioDesplegable.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport '../components/assets/MyCalendar.css';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst MiCalendario = ({ fechaInicio, fechaFin }) => {\r\n  const [eventos, setEventos] = useState([\r\n    {\r\n      title: 'Evento 1',\r\n      start: new Date(2023, 11, 20, 10, 0), // Fecha y hora de inicio\r\n      end: new Date(2024, 0, 10, 12, 0),   // Fecha y hora de fin\r\n    },\r\n    // Agrega más eventos según tus necesidades\r\n  ]);\r\n\r\n  const startDate = new Date(fechaInicio);\r\n  const endDate = new Date(fechaFin);\r\n  const eventStyleGetter = (event) => {\r\n    const backgroundColor = (event.start >= startDate && event.end <= endDate) ? 'red' : '';\r\n    const classNames = backgroundColor ? 'within-range' : '';\r\n    \r\n    return {\r\n      style: {\r\n        backgroundColor: backgroundColor\r\n      },\r\n      className: classNames\r\n    };\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"mi-contenedor\">\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={eventos}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        className=\"mi-calendario\"\r\n        views={['month', 'agenda']}\r\n        toolbar={true}\r\n        eventPropGetter={eventStyleGetter} // Añade esta prop para modificar el estilo de los eventos\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MiCalendario;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,EAAEC,eAAe,QAAQ,oBAAoB;AAC9D,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAO,mDAAmD;AAC1D,OAAO,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,SAAS,GAAGJ,eAAe,CAACC,MAAM,CAAC;AAEzC,MAAMI,YAAY,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,CACrC;IACEa,KAAK,EAAE,UAAU;IACjBC,KAAK,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAAE;IACtCC,GAAG,EAAE,IAAID,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAI;EACvC;EACA;EAAA,CACD,CAAC;;EAEF,MAAME,SAAS,GAAG,IAAIF,IAAI,CAACP,WAAW,CAAC;EACvC,MAAMU,OAAO,GAAG,IAAIH,IAAI,CAACN,QAAQ,CAAC;EAClC,MAAMU,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,eAAe,GAAID,KAAK,CAACN,KAAK,IAAIG,SAAS,IAAIG,KAAK,CAACJ,GAAG,IAAIE,OAAO,GAAI,KAAK,GAAG,EAAE;IACvF,MAAMI,UAAU,GAAGD,eAAe,GAAG,cAAc,GAAG,EAAE;IAExD,OAAO;MACLE,KAAK,EAAE;QACLF,eAAe,EAAEA;MACnB,CAAC;MACDG,SAAS,EAAEF;IACb,CAAC;EACH,CAAC;EAGD,oBACEjB,OAAA;IAAKmB,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5BpB,OAAA,CAACJ,QAAQ;MACPK,SAAS,EAAEA,SAAU;MACrBoB,MAAM,EAAEf,OAAQ;MAChBgB,aAAa,EAAC,OAAO;MACrBC,WAAW,EAAC,KAAK;MACjBJ,SAAS,EAAC,eAAe;MACzBK,KAAK,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAE;MAC3BC,OAAO,EAAE,IAAK;MACdC,eAAe,EAAEZ,gBAAiB,CAAC;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACzB,EAAA,CAvCIH,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAyClB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}