{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evita\\\\Desktop\\\\TIS0.2\\\\AdministradorDeEventos\\\\frontend\\\\src\\\\components\\\\CalendarioDesplegable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport '../components/assets/MyCalendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\nconst MiCalendario = ({\n  fechaInicio,\n  fechaFin,\n  eventos\n}) => {\n  _s();\n  const [eventoo, setEventos] = useState([]);\n  eventoo >= eventos;\n  useEffect(() => {\n    const eventosConColores = eventos.map(evento => ({\n      ...evento,\n      color: evento.color || getRandomColor() // Si el evento no tiene color, asigna uno aleatorio\n    }));\n\n    setEventos(eventosConColores);\n  }, []);\n  const customDayPropGetter = date => {\n    const customStyle = {};\n\n    // Define la fecha que deseas destacar\n    const fechaEspecifica = new Date(fechaInicio);\n    if (moment(date).isSame(fechaEspecifica, 'day')) {\n      customStyle.backgroundColor = 'pink'; // Color de fondo rosa\n    }\n\n    return {\n      style: customStyle\n    };\n  };\n  const dayStyleGetter = date => {\n    // Comprueba si hay eventos en la fecha actual\n    const hasEvents = eventos.some(evento => {\n      const eventStartDate = new Date(evento.start);\n      const eventEndDate = new Date(evento.end);\n      return date >= eventStartDate && date <= eventEndDate;\n    });\n\n    // Si hay eventos, aplica un fondo rosa, de lo contrario, no hace cambios\n    return hasEvents ? {\n      style: {\n        backgroundColor: 'pink'\n      }\n    } : {};\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mi-contenedor\",\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: eventos,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      className: \"mi-calendario\",\n      views: ['month', 'agenda'],\n      toolbar: true,\n      eventPropGetter: (event, start, end, isSelected) => {\n        return {\n          style: {\n            backgroundColor: getRandomColor() // Usa el color asignado al evento\n          }\n        };\n      }\n      //eventPropGetter={eventStyleGetter}\n      ,\n      dayPropGetter: date => {\n        const customStyle = customDayPropGetter(date).style;\n        const eventStyle = dayStyleGetter(date).style;\n        return {\n          style: {\n            ...customStyle,\n            ...eventStyle\n          }\n        };\n      }\n\n      //components={{\n      //   event: EventoPersonalizado // Usa un componente personalizado para mostrar los eventos\n      //    }}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(MiCalendario, \"j5AGasbGsQ4iozccE9H2BALeRvk=\");\n_c = MiCalendario;\nconst getRandomColor = () => {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n};\nconst EventoPersonalizado = ({\n  event\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontWeight: 'bold'\n    },\n    children: event.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 7\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [moment(event.start).format('HH:mm'), \" - \", moment(event.end).format('HH:mm')]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 7\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 88,\n  columnNumber: 5\n}, this);\n_c2 = EventoPersonalizado;\nexport default MiCalendario;\nvar _c, _c2;\n$RefreshReg$(_c, \"MiCalendario\");\n$RefreshReg$(_c2, \"EventoPersonalizado\");","map":{"version":3,"names":["React","useState","Calendar","momentLocalizer","moment","jsxDEV","_jsxDEV","localizer","MiCalendario","fechaInicio","fechaFin","eventos","_s","eventoo","setEventos","useEffect","eventosConColores","map","evento","color","getRandomColor","customDayPropGetter","date","customStyle","fechaEspecifica","Date","isSame","backgroundColor","style","dayStyleGetter","hasEvents","some","eventStartDate","start","eventEndDate","end","className","children","events","startAccessor","endAccessor","views","toolbar","eventPropGetter","event","isSelected","dayPropGetter","eventStyle","fileName","_jsxFileName","lineNumber","columnNumber","_c","letters","i","Math","floor","random","EventoPersonalizado","fontWeight","title","format","_c2","$RefreshReg$"],"sources":["C:/Users/Evita/Desktop/TIS0.2/AdministradorDeEventos/frontend/src/components/CalendarioDesplegable.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport '../components/assets/MyCalendar.css';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst MiCalendario = ({ fechaInicio, fechaFin ,eventos}) => {\r\n    const [eventoo, setEventos] = useState([]);\r\n    eventoo>=eventos;\r\n    useEffect(() => {\r\n    const eventosConColores = eventos.map(evento => ({\r\n        ...evento,\r\n        color: evento.color || getRandomColor(), // Si el evento no tiene color, asigna uno aleatorio\r\n      }));\r\n  \r\n      setEventos(eventosConColores);\r\n    }, []);\r\n  const customDayPropGetter = (date) => {\r\n    const customStyle = {};\r\n\r\n    // Define la fecha que deseas destacar\r\n    const fechaEspecifica = new Date(fechaInicio); \r\n    if (moment(date).isSame(fechaEspecifica, 'day')) {\r\n      customStyle.backgroundColor = 'pink'; // Color de fondo rosa\r\n    }\r\n\r\n    return {\r\n      style: customStyle,\r\n    };\r\n  };\r\n\r\n  const dayStyleGetter = (date) => {\r\n    // Comprueba si hay eventos en la fecha actual\r\n    const hasEvents = eventos.some(evento => {\r\n      const eventStartDate = new Date(evento.start);\r\n      const eventEndDate = new Date(evento.end);\r\n      return date >= eventStartDate && date <= eventEndDate;\r\n    });\r\n\r\n    // Si hay eventos, aplica un fondo rosa, de lo contrario, no hace cambios\r\n    return hasEvents ? { style: { backgroundColor: 'pink' } } : {};\r\n  };\r\n\r\n  return (\r\n    <div className=\"mi-contenedor\">\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={eventos}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        className=\"mi-calendario\"\r\n        views={['month', 'agenda']}\r\n        toolbar={true}\r\n        eventPropGetter={(event, start, end, isSelected) => {\r\n            return {\r\n              style: {\r\n                backgroundColor: getRandomColor(), // Usa el color asignado al evento\r\n              },\r\n            };\r\n          }}\r\n        //eventPropGetter={eventStyleGetter}\r\n        dayPropGetter={(date) => {\r\n          const customStyle = customDayPropGetter(date).style;\r\n          const eventStyle = dayStyleGetter(date).style;\r\n          return { style: { ...customStyle, ...eventStyle } };\r\n        }}\r\n\r\n        //components={{\r\n         //   event: EventoPersonalizado // Usa un componente personalizado para mostrar los eventos\r\n      //    }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst getRandomColor = () => {\r\n    const letters = '0123456789ABCDEF';\r\n    let color = '#';\r\n    for (let i = 0; i < 6; i++) {\r\n      color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  };\r\n  \r\nconst EventoPersonalizado = ({ event }) => (\r\n    <div>\r\n      <div style={{ fontWeight: 'bold' }}>{event.title}</div>\r\n      <div>{moment(event.start).format('HH:mm')} - {moment(event.end).format('HH:mm')}</div>\r\n    </div>\r\n  );\r\n\r\nexport default MiCalendario;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}