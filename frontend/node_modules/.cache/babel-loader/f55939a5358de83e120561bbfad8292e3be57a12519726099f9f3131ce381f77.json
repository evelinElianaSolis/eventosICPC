{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jonatan\\\\Desktop\\\\Nueva carpeta (5)\\\\AdministradorDeEventos\\\\frontend\\\\src\\\\components\\\\FromCrearEvento.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from '../components/api/conexionApi.js';\nimport '../components/assets/FormCrearEvento.css';\nimport ModalRequisito from './ModalRequisito';\nimport ModalRegla from './ModalReglas';\nimport ModalActividad from './ModalActividades';\nimport ModalCreacionEvento from './ModalEventoCreadoExitosamente.jsx';\nimport { uploadFile } from '../Firebase/config.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventForm = ultimoId => {\n  _s();\n  // Formuraio\n  const [fechaInicio, setFechaInicio] = useState('null');\n  const [fechaFin, setFechaFin] = useState('null');\n  const [participacion, setParticipacion] = useState('');\n  const [numEntrenadores, setNumEntrenadores] = useState('0');\n  const [numParticipantes, setNumParticipantes] = useState(\"0\");\n\n  // Formuraio Array\n  const [reglas, setReglas] = useState([]);\n  const [requisitos, setRequisitos] = useState([]);\n  const [actividades, setActividades] = useState([]);\n\n  // Vistas Modales\n  const [mostrarVentanaRequisitos, setMostrarVentanaRequisitos] = useState(false);\n  const [mostrarVentanaReglas, setMostrarVentanaReglas] = useState(false);\n  const [mostrarVentanaActividad, setMostrarVentanaActividad] = useState(false);\n  const [MostrarParticipacion, setMostrarParticipacion] = useState(false);\n  const [mostrarModalSalir, setMostrarModalSalir] = useState(false);\n  const [imagen, setImagen] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [nuevaReglas, setNuevaReglas] = useState('');\n  const [actividad, setActividad] = useState('');\n  const [nuevoRequisito, setNuevoRequisito] = useState('');\n  const [modalVisible, setModalVisible] = useState(false);\n  const [horaInicio, setHoraInicio] = useState(\"\");\n  const [ubicacion, setUbicacion] = useState(\"\");\n  const [modalidad, setModalidad] = useState(\"\");\n  const [descripcionActividad, setDescripcionActividad] = useState(\"\");\n  const [numParticipantesError, setNumParticipantesError] = useState(false);\n  const [fechaInicioError, setFechaInicioError] = useState(false);\n  const [fechaFinError, setFechaFinError] = useState(false);\n  const [participacionError, setParticipacionError] = useState(false);\n  const [numparticipacionError, setnumParticipantesError] = useState(false);\n  const [numEntrenadoresError, setNumEntrenadoresError] = useState(false);\n  const [actividadError, setActividadError] = useState(false);\n  const [nombreRegla, setNombreRegla] = useState('');\n  const [descripcionRegla, setDescripcionRegla] = useState('');\n  const [nombreRequisito, setNombreRequisito] = useState('');\n  const [descripcionRequisito, setDescripcionRequisito] = useState('');\n\n  // Funciones Abrir - Cerrar Modales\n  const mostrarVentanaActividadEmergente = () => {\n    setMostrarVentanaActividad(true);\n  };\n  const cerrarVentanaActividadEmergente = () => {\n    setMostrarVentanaActividad(false);\n  };\n  const mostrarVentanaReglasEmergente = () => {\n    setMostrarVentanaReglas(true);\n  };\n  const cerrarVentanaReglasEmergente = () => {\n    setMostrarVentanaReglas(false);\n  };\n  const mostrarVentanaEmergente = () => {\n    setMostrarVentanaRequisitos(true);\n  };\n  const cerrarVentanaEmergente = () => {\n    setMostrarVentanaRequisitos(false);\n  };\n\n  // Funciones redirecciones\n  const handleButtonGuardarCE = () => {\n    window.location.href = '/Home';\n  };\n  const handleButtonCancelarCE = () => {\n    window.location.href = '/ConfigurarEvento';\n  };\n\n  // Funciones Requisitos\n  const agregarRequisito = () => {\n    const nuevoRequisito = {\n      nombre: nombreRequisito,\n      descripcion: descripcionRequisito\n    };\n    setRequisitos([...requisitos, nuevoRequisito]);\n    setNombreRequisito('');\n    setDescripcionRequisito('');\n    cerrarVentanaEmergente();\n  };\n  const eliminarRequisito = index => {\n    const nuevosRequisitos = [...requisitos];\n    nuevosRequisitos.splice(index, 1);\n    setRequisitos(nuevosRequisitos);\n  };\n\n  // Funciones Reglas\n  const agregarRegla = () => {\n    const nuevoReglas = {\n      nombre: nombreRegla,\n      descripcion: descripcionRegla\n    };\n    setReglas([...reglas, nuevoReglas]);\n    setNombreRegla('');\n    setDescripcionRegla('');\n    cerrarVentanaReglasEmergente();\n  };\n  const eliminarReglas = index => {\n    const nuevasReglas = [...reglas];\n    nuevasReglas.splice(index, 1);\n    setReglas(nuevasReglas);\n  };\n\n  // Funciones Actividades\n  const agregarActividad = () => {\n    const nuevaActividad = {\n      nombre: actividad\n    };\n    setActividades([...actividades, nuevaActividad]);\n    setActividad('');\n    setFechaInicio('null');\n    setFechaFin('null');\n    setActividadError(false);\n    setFechaInicioError(false);\n    setFechaFinError(false);\n    cerrarVentanaEmergente();\n  };\n  const eliminarActividad = index => {\n    const nuevasActividades = [...actividades];\n    nuevasActividades.splice(index, 1);\n    setActividades(nuevasActividades);\n  };\n  const handleImagenChange = e => {\n    const file2 = e.target.files[0];\n    if (file2) {\n      setImagen(file2); // Almacena el archivo directamente\n\n      // Si necesitas mostrar una vista previa de la imagen, puedes usar FileReader\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        // Realiza la validación de que es una imagen antes de mostrar la vista previa\n        if (reader.result && reader.result.startsWith(\"data:image\")) {} else {\n          // Manejo de error si el archivo no es una imagen\n          console.error(\"El archivo seleccionado no es una imagen válida.\");\n          setImagen(null);\n        }\n      };\n      reader.readAsDataURL(file2);\n    }\n  };\n\n  ////Modificado por eve para que compile\n  const [error, setError] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.get('http://localhost:8000/api/obtenerUltimoIdEvento');\n      const ultimoId = response.data.idEvento;\n      eventId = ultimoId;\n      console.log('Id del evento:', eventId);\n      const imagenId = await uploadFile(file);\n      const nuevoEvento = {\n        idEvento: eventId,\n        participacion: participacion,\n        numParticipantes: numParticipantes,\n        numEntrenadores: numEntrenadores,\n        aficheEvento: imagenId\n      };\n      await axios.put(`./eventoActualizar/${eventId}`, nuevoEvento);\n      console.log('Evento creado con éxito');\n      setModalVisible(true);\n      setMostrarModalSalir(true);\n    } catch (error) {\n      if (error.response) {\n        console.error('Respuesta del servidor con error:', error.response);\n        console.error('Código de estado HTTP:', error.response.status);\n      } else if (error.request) {\n        console.error('No se recibió respuesta del servidor:', error.request);\n      } else {\n        console.error('Error durante la configuración de la solicitud:', error.message);\n      }\n      setModalVisible(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"tweet-composer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"CrearEvento\",\n      children: \"Crear Evento\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SubirImagen\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Campovacio\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"afiche\",\n          children: \"Afiche del evento:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ColorCampoVacio\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"image\",\n        name: \"image\",\n        accept: \"image/*\",\n        onChange: e => {\n          handleImagenChange(e);\n          setFile(e.target.files[0]);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        className: \"upload-container\",\n        children: imagen ? /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"image-preview\",\n          src: URL.createObjectURL(imagen),\n          alt: \"Vista previa\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://cdn-icons-png.flaticon.com/512/883/883787.png\",\n              alt: \"Upload Icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"upload-text\",\n            children: \"Haz clic aqu\\xED para subir un Afiche\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Campovacio\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Requisitios\",\n        children: \"Requisitos:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ColorCampoVacio\",\n        children: \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AlinicaionModal\",\n      children: /*#__PURE__*/_jsxDEV(ModalRequisito, {\n        mostrar: mostrarVentanaRequisitos,\n        cerrar: cerrarVentanaEmergente,\n        nombre: nombreRequisito,\n        descripcion: descripcionRequisito,\n        setNombre: setNombreRequisito,\n        setDescripcion: setDescripcionRequisito,\n        agregarRequisito: agregarRequisito\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Requisitos\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"distribucionReque\",\n        children: [requisitos.length > 0 && requisitos.map((requisito, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Requisitos\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Requisitos del evento\",\n            value: requisito.nombre,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => eliminarRequisito(index),\n            className: \"BotRequisitos\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://cdn-icons-png.flaticon.com/512/6722/6722986.png\",\n              alt: \"\",\n              className: \"iconoEliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Requisitos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ConfbuttonRequisitos\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonRequisitos1\",\n        type: \"button\",\n        onClick: mostrarVentanaEmergente,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Campovacio\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"Reglas\",\n        children: \"Reglas:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ColorCampoVacio\",\n        children: \"*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AlinicaionModal\",\n      children: /*#__PURE__*/_jsxDEV(ModalRegla, {\n        mostrar: mostrarVentanaReglas,\n        cerrar: cerrarVentanaReglasEmergente,\n        nombre: nombreRegla,\n        descripcion: descripcionRegla,\n        setDescripcion: setDescripcionRegla,\n        setNombre: setNombreRegla,\n        agregarRegla: agregarRegla\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Reglas\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"distribucionReque\",\n        children: [reglas.length > 0 && reglas.map((reglas, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Requisitos\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Reglas del evento\",\n            value: reglas.nombre,\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => eliminarReglas(index),\n            className: \"BotRequisitos\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"https://cdn-icons-png.flaticon.com/512/6722/6722986.png\",\n              alt: \"\",\n              className: \"iconoEliminar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 11\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 9\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Reglas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ConfbuttonRequisitos\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"buttonRequisitos1\",\n        type: \"button\",\n        onClick: mostrarVentanaReglasEmergente,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Campovacio\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"Actividad\",\n          children: \"Actividad:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ColorCampoVacio\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AlinicaionModal\",\n        children: /*#__PURE__*/_jsxDEV(ModalActividad, {\n          mostrar: mostrarVentanaActividad,\n          cerrar: cerrarVentanaActividadEmergente,\n          actividad: actividad,\n          fechaInicio: fechaInicio,\n          fechaFin: fechaFin,\n          horaInicio: horaInicio,\n          ubicacion: ubicacion,\n          modalidad: modalidad,\n          descripcionActividad: descripcionActividad,\n          setActividad: setActividad,\n          setFechaInicio: setFechaInicio,\n          setFechaFin: setFechaFin,\n          setHoraInicio: setHoraInicio,\n          setUbicacion: setUbicacion,\n          setModalidad: setModalidad,\n          setDescripcionActividad: setDescripcionActividad,\n          agregarActividad: agregarActividad\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Reglas\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"distribucionReque\",\n          children: [actividades.length > 0 && actividades.map((actividades, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Acividades\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Actividad\",\n              value: actividades.nombre,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => eliminarActividad(index),\n              className: \"BotRequisitos\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"https://cdn-icons-png.flaticon.com/512/6722/6722986.png\",\n                alt: \"\",\n                className: \"iconoEliminar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Reglas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ConfbuttonRequisitos\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"buttonRequisitos1\",\n          type: \"button\",\n          onClick: mostrarVentanaActividadEmergente,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Participantes\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Participaci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"participacion\",\n              value: \"Individual\",\n              checked: participacion === \"Individual\",\n              onChange: e => (setParticipacion(e.target.value), setMostrarParticipacion(false)),\n              onBlur: () => (setParticipacionError(participacion.trim() === \"\"), setMostrarParticipacion(false)),\n              className: participacionError ? \"campo-vacio\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 15\n            }, this), \"Individual\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"participacion\",\n              value: \"Grupal\",\n              checked: participacion === \"Grupal\",\n              onChange: e => (setParticipacion(e.target.value), setMostrarParticipacion(true)),\n              onBlur: () => (setParticipacionError(participacion.trim() === \"\"), setMostrarParticipacion(true)),\n              className: participacionError ? \"campo-vacio\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 15\n            }, this), \"Grupal\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this), MostrarParticipacion && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Participantes1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"errorInf\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"numParticipantes\",\n              children: \"N\\xFAmero de participantes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 13\n            }, this), numParticipantesError && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"numParticipantes\",\n            name: \"numParticipantes\",\n            placeholder: \"N\\xFAmero de participantes\",\n            value: numParticipantes,\n            onChange: e => setNumParticipantes(e.target.value),\n            onBlur: () => setnumParticipantesError(numParticipantes.trim() === \"\"),\n            className: numParticipantesError ? \"campo-vacio\" : \"\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"errorInf\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"numEntrenadores\",\n              children: \"N\\xFAmero de entrenadores\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 11\n            }, this), numEntrenadoresError && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 36\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"numEntrenadores\",\n            name: \"numEntrenadores\",\n            placeholder: \"N\\xFAmero de entrenadores\",\n            value: numEntrenadores,\n            onChange: e => setNumEntrenadores(e.target.value),\n            onBlur: () => setNumEntrenadoresError(numEntrenadores.trim() === \"\"),\n            className: numEntrenadoresError ? \"campo-vacio\" : \"\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"other-elements\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"tweet-button\",\n          type: \"submit\",\n          onClick: handleButtonCancelarCE,\n          children: \"Atras\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"tweet-button\",\n          type: \"submit\",\n          onClick: handleSubmit,\n          children: \"Guardar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 7\n    }, this), mostrarModalSalir && /*#__PURE__*/_jsxDEV(ModalCreacionEvento, {\n      message: \"Crear Evento\",\n      onClose: handleButtonCancelarCE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n_s(EventForm, \"wmJI+STR1YyxSjtAD55+bC/IWVk=\");\n_c = EventForm;\nexport default EventForm;\n\n/** import React, { useState } from 'react';\r\n\r\nconst ListaActividades = () => {\r\n  const [actividades, setActividades] = useState([]);\r\n  const [nuevaActividad, setNuevaActividad] = useState('');\r\n  const [fechaInicio, setFechaInicio] = useState('null');\r\n  const [fechaFin, setFechaFin] = useState('null');\r\n  const [actividadError, setActividadError] = useState(false);\r\n  const [fechaInicioError, setFechaInicioError] = useState(false);\r\n  const [fechaFinError, setFechaFinError] = useState(false);\r\n\r\n  const agregarActividad = () => {\r\n    if (nuevaActividad.trim() === '' || fechaInicio.trim() === 'null' || fechaFin.trim() === 'null') {\r\n      setActividadError(nuevaActividad.trim() === '');\r\n      setFechaInicioError(fechaInicio.trim() === 'null');\r\n      setFechaFinError(fechaFin.trim() === 'null');\r\n      return;\r\n    }\r\n\r\n    setActividades([...actividades, { nombre: nuevaActividad, fechaInicio, fechaFin }]);\r\n    setNuevaActividad('');\r\n    setFechaInicio('null');\r\n    setFechaFin('null');\r\n    setActividadError(false);\r\n    setFechaInicioError(false);\r\n    setFechaFinError(false);\r\n  };\r\n\r\n  const eliminarActividad = (index) => {\r\n    const nuevasActividades = [...actividades];\r\n    nuevasActividades.splice(index, 1);\r\n    setActividades(nuevasActividades);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Actividades\">\r\n      <fieldset className=\"role-fieldset\">\r\n        <legend>Actividades</legend>\r\n        <div className=\"radio-group\">\r\n          {actividades.map((actividad, index) => (\r\n            <div key={index} className=\"Actividades\">\r\n              <div className=\"errorInf\">\r\n                <label htmlFor=\"Actividad\">Nombre de la actividad</label>\r\n                <p>*</p>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"actividad\"\r\n                value={actividad.nombre}\r\n                readOnly\r\n              />\r\n\r\n              <div className=\"Fecha\">\r\n                <div className=\"FechaInicio\">\r\n                  <div className=\"errorInf\">\r\n                    <label htmlFor=\"fecha-inicio\">Fecha Inicio</label>\r\n                    <p>*</p>\r\n                  </div>\r\n                  <input\r\n                    className={`FechaDesing ${fechaInicioError ? 'campo-vacio' : 'null'}`}\r\n                    type=\"date\"\r\n                    value={actividad.fechaInicio}\r\n                    readOnly\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"FechaFinal\">\r\n                  <div className=\"errorInf\">\r\n                    <label htmlFor=\"fecha-fin\">Fecha Fin </label>\r\n                    <p>*</p>\r\n                  </div>\r\n                  <input\r\n                    className={`FechaDesing ${fechaFinError ? 'campo-vacio' : 'null'}`}\r\n                    type=\"date\"\r\n                    value={actividad.fechaFin}\r\n                    readOnly\r\n                  />\r\n                </div>\r\n              </div>\r\n              <button type=\"button\" onClick={() => eliminarActividad(index)} className=\"BotRequisitos\">\r\n                Eliminar\r\n              </button>\r\n            </div>\r\n          ))}\r\n          <div className=\"Actividades\">\r\n            <div className=\"errorInf\">\r\n              <label htmlFor=\"Actividad\">Nombre de la actividad</label>\r\n              {actividadError && <p>*</p>}\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              id=\"actividad\"\r\n              placeholder=\"actividad\"\r\n              value={nuevaActividad}\r\n              onChange={(e) => setNuevaActividad(e.target.value)}\r\n              onBlur={() => setActividadError(nuevaActividad.trim() === '')}\r\n              className={actividadError ? 'campo-vacio' : ''}\r\n              required\r\n            />\r\n\r\n            <div className=\"Fecha\">\r\n              <div className=\"FechaInicio\">\r\n                <div className=\"errorInf\">\r\n                  <label htmlFor=\"fecha-inicio\">Fecha Inicio</label>\r\n                  {fechaInicioError && <p>*</p>}\r\n                </div>\r\n                <input\r\n                  className={`FechaDesing ${fechaInicioError ? 'campo-vacio' : 'null'}`}\r\n                  type=\"date\"\r\n                  value={fechaInicio}\r\n                  onChange={(e) => setFechaInicio(e.target.value)}\r\n                  onBlur={() => setFechaInicioError(fechaInicio.trim() === 'null')}\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div className=\"FechaFinal\">\r\n                <div className=\"errorInf\">\r\n                  <label htmlFor=\"fecha-fin\">Fecha Fin </label>\r\n                  {fechaFinError && <p>*</p>}\r\n                </div>\r\n                <input\r\n                  className={`FechaDesing ${fechaFinError ? 'campo-vacio' : 'null'}`}\r\n                  type=\"date\"\r\n                  value={fechaFin}\r\n                  onChange={(e) => setFechaFin(e.target.value)}\r\n                  onBlur={() => setFechaFinError(fechaFin.trim() === 'null')}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <button type=\"button\" onClick={agregarActividad} className=\"BotRequisitos\">\r\n              Agregar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </fieldset>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListaActividades;\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <div className=\"Reglas\">\r\n      <div className=\"Campovacio\">\r\n        <label htmlFor=\"reglas\">Reglas:</label>\r\n        <div className=\"ColorCampoVacio\">*</div>\r\n      </div>\r\n      <div className=\"distribucionReque\">\r\n        {reglas.map((regla, index) => (\r\n          <div key={index} className=\"Requisitos\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Regla del evento\"\r\n              value={regla}\r\n              onChange={(e) => {\r\n                const nuevasReglas = [...reglas];\r\n                nuevasReglas[index] = e.target.value;\r\n                setReglas(nuevasReglas);\r\n              }}\r\n              required\r\n            />\r\n            <button type=\"button\" onClick={() => eliminarRegla(index)} className=\"BotRequisitos\">\r\n             <img src=\"https://cdn-icons-png.flaticon.com/512/6722/6722986.png\" alt=\"\" className=\"iconoEliminar\"/>\r\n            </button>\r\n            <button type=\"button\" onClick={agregarRegla} className=\"BotRequisitos\">\r\n              +\r\n            </button>\r\n          </div>\r\n        ))}\r\n        <div className=\"Requisitos\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"reglas\"\r\n            name=\"reglas\"\r\n            placeholder=\"Nueva regla\"\r\n            value={nuevaRegla}\r\n            onChange={(e) => setNuevaRegla(e.target.value)}\r\n            required\r\n          />\r\n          <button type=\"button\" onClick={() => eliminarRegla(index)} className=\"BotRequisitos\">\r\n            <img src=\"https://cdn-icons-png.flaticon.com/512/6722/6722986.png\" alt=\"\" className=\"iconoEliminar\"/>\r\n          </button>\r\n          <button type=\"button\" onClick={agregarRegla} className=\"BotRequisitos\">\r\n            +\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>             \r\n\r\n*/\nvar _c;\n$RefreshReg$(_c, \"EventForm\");","map":{"version":3,"names":["React","useState","axios","ModalRequisito","ModalRegla","ModalActividad","ModalCreacionEvento","uploadFile","jsxDEV","_jsxDEV","EventForm","ultimoId","_s","fechaInicio","setFechaInicio","fechaFin","setFechaFin","participacion","setParticipacion","numEntrenadores","setNumEntrenadores","numParticipantes","setNumParticipantes","reglas","setReglas","requisitos","setRequisitos","actividades","setActividades","mostrarVentanaRequisitos","setMostrarVentanaRequisitos","mostrarVentanaReglas","setMostrarVentanaReglas","mostrarVentanaActividad","setMostrarVentanaActividad","MostrarParticipacion","setMostrarParticipacion","mostrarModalSalir","setMostrarModalSalir","imagen","setImagen","file","setFile","nuevaReglas","setNuevaReglas","actividad","setActividad","nuevoRequisito","setNuevoRequisito","modalVisible","setModalVisible","horaInicio","setHoraInicio","ubicacion","setUbicacion","modalidad","setModalidad","descripcionActividad","setDescripcionActividad","numParticipantesError","setNumParticipantesError","fechaInicioError","setFechaInicioError","fechaFinError","setFechaFinError","participacionError","setParticipacionError","numparticipacionError","setnumParticipantesError","numEntrenadoresError","setNumEntrenadoresError","actividadError","setActividadError","nombreRegla","setNombreRegla","descripcionRegla","setDescripcionRegla","nombreRequisito","setNombreRequisito","descripcionRequisito","setDescripcionRequisito","mostrarVentanaActividadEmergente","cerrarVentanaActividadEmergente","mostrarVentanaReglasEmergente","cerrarVentanaReglasEmergente","mostrarVentanaEmergente","cerrarVentanaEmergente","handleButtonGuardarCE","window","location","href","handleButtonCancelarCE","agregarRequisito","nombre","descripcion","eliminarRequisito","index","nuevosRequisitos","splice","agregarRegla","nuevoReglas","eliminarReglas","nuevasReglas","agregarActividad","nuevaActividad","eliminarActividad","nuevasActividades","handleImagenChange","e","file2","target","files","reader","FileReader","onloadend","result","startsWith","console","error","readAsDataURL","setError","handleSubmit","preventDefault","response","get","data","idEvento","eventId","log","imagenId","nuevoEvento","aficheEvento","put","status","request","message","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","name","accept","onChange","src","URL","createObjectURL","alt","mostrar","cerrar","setNombre","setDescripcion","length","map","requisito","placeholder","value","readOnly","onClick","checked","onBlur","trim","required","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Jonatan/Desktop/Nueva carpeta (5)/AdministradorDeEventos/frontend/src/components/FromCrearEvento.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from '../components/api/conexionApi.js';\r\nimport '../components/assets/FormCrearEvento.css';\r\nimport ModalRequisito from './ModalRequisito';\r\nimport ModalRegla from './ModalReglas';\r\nimport ModalActividad from './ModalActividades';\r\nimport ModalCreacionEvento from './ModalEventoCreadoExitosamente.jsx';\r\nimport {uploadFile} from '../Firebase/config.js'\r\n\r\n\r\n\r\n\r\nconst EventForm = (ultimoId) => {\r\n\r\n\r\n  // Formuraio\r\n  const [fechaInicio,                 setFechaInicio] =         useState('null');\r\n  const [fechaFin,                    setFechaFin] =            useState('null');\r\n  const [participacion,               setParticipacion] =       useState('');\r\n  const [numEntrenadores,             setNumEntrenadores] =     useState('0');\r\n  const [numParticipantes,            setNumParticipantes] =    useState(\"0\");\r\n\r\n\r\n// Formuraio Array\r\n  const [reglas,                      setReglas]      = useState([]);\r\n  const [requisitos,                  setRequisitos]  = useState([]);\r\n  const [actividades,                 setActividades] = useState([]);\r\n\r\n\r\n// Vistas Modales\r\nconst [mostrarVentanaRequisitos,          setMostrarVentanaRequisitos] =  useState(false);\r\nconst [mostrarVentanaReglas,              setMostrarVentanaReglas] =      useState(false);\r\nconst [mostrarVentanaActividad,           setMostrarVentanaActividad] =   useState(false);\r\nconst [MostrarParticipacion,              setMostrarParticipacion] =      useState(false);\r\nconst [mostrarModalSalir,                 setMostrarModalSalir] =         useState(false);\r\n\r\n\r\n  const [imagen,                      setImagen] = useState(\"\");\r\n  const [file,                        setFile] = useState(null)\r\n  \r\n  const [nuevaReglas,                 setNuevaReglas] = useState('');\r\n  const [actividad,                   setActividad] = useState('');\r\n  const [nuevoRequisito,              setNuevoRequisito] = useState('');\r\n  const [modalVisible,                setModalVisible] = useState(false);\r\n  const [horaInicio,                  setHoraInicio] = useState(\"\"); \r\n  const [ubicacion,                   setUbicacion] = useState(\"\");\r\n  const [modalidad,                   setModalidad] = useState(\"\");\r\n  const [descripcionActividad,        setDescripcionActividad] = useState(\"\");\r\n  const [numParticipantesError,       setNumParticipantesError] = useState(false);\r\n  const [fechaInicioError,            setFechaInicioError] = useState(false);\r\n  const [fechaFinError,               setFechaFinError] = useState(false);\r\n  const [participacionError,          setParticipacionError] = useState(false);\r\n  const [numparticipacionError,       setnumParticipantesError] = useState(false);\r\n  const [numEntrenadoresError,        setNumEntrenadoresError] = useState(false);\r\n  const [actividadError,              setActividadError] = useState(false);\r\n  const [nombreRegla,                 setNombreRegla] = useState('');\r\n  const [descripcionRegla,            setDescripcionRegla] = useState('');\r\n  const [nombreRequisito,             setNombreRequisito] = useState('');\r\n  const [descripcionRequisito,        setDescripcionRequisito] = useState('');\r\n  \r\n \r\n\r\n// Funciones Abrir - Cerrar Modales\r\n  const mostrarVentanaActividadEmergente  = () => {    setMostrarVentanaActividad(true);};\r\n  const cerrarVentanaActividadEmergente   = () => {    setMostrarVentanaActividad(false);};\r\n  const mostrarVentanaReglasEmergente     = () => {    setMostrarVentanaReglas(true);};\r\n  const cerrarVentanaReglasEmergente      = () => {    setMostrarVentanaReglas(false);};\r\n  const mostrarVentanaEmergente           = () => {    setMostrarVentanaRequisitos(true);};\r\n  const cerrarVentanaEmergente            = () => {    setMostrarVentanaRequisitos(false);};\r\n\r\n// Funciones redirecciones\r\n  const handleButtonGuardarCE = () => {    window.location.href = '/Home';};\r\n  const handleButtonCancelarCE = () => {    window.location.href = '/ConfigurarEvento';};\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n// Funciones Requisitos\r\n  const agregarRequisito = () => {\r\n    const nuevoRequisito = { nombre: nombreRequisito, descripcion: descripcionRequisito };\r\n    setRequisitos([...requisitos, nuevoRequisito]);\r\n    setNombreRequisito('');\r\n    setDescripcionRequisito('');\r\n    cerrarVentanaEmergente();\r\n  };\r\n\r\n  const eliminarRequisito = (index) => {\r\n    const nuevosRequisitos = [...requisitos];\r\n    nuevosRequisitos.splice(index, 1);\r\n    setRequisitos(nuevosRequisitos);\r\n  };\r\n\r\n// Funciones Reglas\r\n  const agregarRegla = () => {\r\n    const nuevoReglas = { nombre: nombreRegla, descripcion: descripcionRegla };\r\n    setReglas([...reglas, nuevoReglas]);\r\n    setNombreRegla('');\r\n    setDescripcionRegla('');\r\n    cerrarVentanaReglasEmergente();\r\n  };\r\n  \r\n  const eliminarReglas = (index) => {\r\n    const nuevasReglas = [...reglas];\r\n    nuevasReglas.splice(index, 1);\r\n    setReglas(nuevasReglas);\r\n  };\r\n\r\n// Funciones Actividades\r\nconst agregarActividad = () => {\r\n  const nuevaActividad = { nombre: actividad, };\r\n  setActividades([...actividades, nuevaActividad]);\r\n  setActividad('');\r\n  setFechaInicio('null');\r\n  setFechaFin('null');\r\n  setActividadError(false);\r\n  setFechaInicioError(false);\r\n  setFechaFinError(false);\r\n  cerrarVentanaEmergente();\r\n};\r\n\r\nconst eliminarActividad = (index) => {\r\n  const nuevasActividades = [...actividades];\r\n  nuevasActividades.splice(index, 1);\r\n  setActividades(nuevasActividades);\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const handleImagenChange = (e) => {\r\n    const file2 = e.target.files[0];\r\n  \r\n    if (file2) {\r\n      setImagen(file2); // Almacena el archivo directamente\r\n  \r\n      // Si necesitas mostrar una vista previa de la imagen, puedes usar FileReader\r\n      const reader = new FileReader();\r\n  \r\n      reader.onloadend = () => {\r\n        // Realiza la validación de que es una imagen antes de mostrar la vista previa\r\n        if (reader.result && reader.result.startsWith(\"data:image\")) {\r\n        } else {\r\n          // Manejo de error si el archivo no es una imagen\r\n          console.error(\"El archivo seleccionado no es una imagen válida.\");\r\n          setImagen(null);\r\n        }\r\n      };\r\n  \r\n      reader.readAsDataURL(file2);\r\n    }\r\n  };\r\n\r\n\r\n  \r\n\r\n  \r\n////Modificado por eve para que compile\r\nconst [error, setError]=useState(false); \r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      const response = await axios.get('http://localhost:8000/api/obtenerUltimoIdEvento');\r\n      const ultimoId = response.data.idEvento;\r\n      eventId = ultimoId;\r\n      console.log('Id del evento:', eventId);\r\n\r\n\r\n      const imagenId = await uploadFile(file);\r\n      const nuevoEvento={\r\n        idEvento:eventId,\r\n        participacion: participacion,\r\n        numParticipantes:numParticipantes,\r\n        numEntrenadores:numEntrenadores,\r\n        aficheEvento:imagenId\r\n        \r\n      }\r\n      await axios.put(`./eventoActualizar/${eventId}`, nuevoEvento);\r\n\r\n      console.log('Evento creado con éxito');\r\n      setModalVisible(true);\r\n      setMostrarModalSalir(true);\r\n      \r\n    } catch (error) {\r\n      if (error.response) {\r\n        console.error('Respuesta del servidor con error:', error.response);\r\n        console.error('Código de estado HTTP:', error.response.status);\r\n      } else if (error.request) {\r\n        console.error('No se recibió respuesta del servidor:', error.request);\r\n      } else {\r\n        console.error('Error durante la configuración de la solicitud:', error.message);\r\n      }\r\n      setModalVisible(false);\r\n    }\r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"tweet-composer\">\r\n      <h1 className=\"CrearEvento\">Crear Evento</h1>\r\n\r\n      <div className=\"SubirImagen\">\r\n        <div className='Campovacio'>\r\n          <label htmlFor=\"afiche\">Afiche del evento:</label>\r\n          <div className=\"ColorCampoVacio\">*</div>\r\n        </div>\r\n        <input\r\n          type=\"file\"\r\n          id=\"image\"\r\n          name=\"image\"\r\n          accept=\"image/*\"\r\n          onChange={(e) => {\r\n            handleImagenChange(e);\r\n            setFile(e.target.files[0]);\r\n          }}\r\n          \r\n        />  \r\n        <label htmlFor=\"image\" className=\"upload-container\">\r\n        {imagen ? (\r\n          <img\r\n            id=\"image-preview\"\r\n            src={URL.createObjectURL(imagen)}\r\n            alt=\"Vista previa\"\r\n          />\r\n          \r\n        ):(\r\n          \r\n          <div>\r\n            <div className=\"upload-icon\">\r\n              <img src=\"https://cdn-icons-png.flaticon.com/512/883/883787.png\" alt=\"Upload Icon\" />\r\n            </div>\r\n          <div className=\"upload-text\">Haz clic aquí para subir un Afiche</div>\r\n        </div>\r\n        )}\r\n      </label>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <div className='Campovacio'>\r\n    <label htmlFor=\"Requisitios\">Requisitos:</label>\r\n        <div className=\"ColorCampoVacio\">*</div>\r\n      </div>\r\n    \r\n      {/* Componente del modal */}\r\n      <div className=\"AlinicaionModal\">\r\n        <ModalRequisito\r\n          mostrar={mostrarVentanaRequisitos}\r\n          cerrar={cerrarVentanaEmergente}\r\n          nombre={nombreRequisito}\r\n          descripcion={descripcionRequisito}\r\n          setNombre={setNombreRequisito}\r\n          setDescripcion={setDescripcionRequisito}\r\n          agregarRequisito={agregarRequisito}\r\n          \r\n        />\r\n      </div>\r\n      \r\n      {/* Renderización de requisitos */}\r\n      <div className=\"Requisitos\">\r\n        <div className=\"distribucionReque\">\r\n          {requisitos.length > 0 &&\r\n            requisitos.map((requisito, index) => (\r\n              <div key={index} className=\"Requisitos\">\r\n                <input type=\"text\" placeholder=\"Requisitos del evento\" value={requisito.nombre} readOnly />\r\n                <button type=\"button\" onClick={() => eliminarRequisito(index)} className=\"BotRequisitos\">\r\n                  <img src=\"https://cdn-icons-png.flaticon.com/512/6722/6722986.png\" alt=\"\" className=\"iconoEliminar\"/>\r\n                </button>\r\n              </div>\r\n            ))}\r\n          <div className=\"Requisitos\">\r\n          \r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"ConfbuttonRequisitos\">\r\n        <button className=\"buttonRequisitos1\" type=\"button\"  onClick={mostrarVentanaEmergente}>\r\n          +\r\n        </button>\r\n      </div>\r\n\r\n\r\n  \r\n\r\n  <div className='Campovacio'>\r\n    <label htmlFor=\"Reglas\">Reglas:</label>\r\n    <div className=\"ColorCampoVacio\">*</div>\r\n  </div>\r\n\r\n{/* Componente del modal */}\r\n<div className=\"AlinicaionModal\">\r\n  <ModalRegla\r\n    mostrar={mostrarVentanaReglas}\r\n    cerrar={cerrarVentanaReglasEmergente}\r\n    nombre={nombreRegla}\r\n    descripcion={descripcionRegla}\r\n    setDescripcion={setDescripcionRegla}\r\n    setNombre={setNombreRegla}\r\n    agregarRegla={agregarRegla}\r\n  />\r\n</div>\r\n\r\n{/* Renderización de reglas */}\r\n<div className=\"Reglas\">\r\n  <div className=\"distribucionReque\">\r\n    {reglas.length > 0 &&\r\n      reglas.map((reglas, index) => (\r\n        <div key={index} className=\"Requisitos\">\r\n          <input type=\"text\" placeholder=\"Reglas del evento\" value={reglas.nombre} readOnly />\r\n          <button type=\"button\" onClick={() => eliminarReglas(index)} className=\"BotRequisitos\">\r\n            <img src=\"https://cdn-icons-png.flaticon.com/512/6722/6722986.png\" alt=\"\" className=\"iconoEliminar\"/>\r\n          </button>\r\n        </div>\r\n      ))}\r\n    <div className=\"Reglas\">\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div className=\"ConfbuttonRequisitos\">\r\n  <button className=\"buttonRequisitos1\" type=\"button\" onClick={mostrarVentanaReglasEmergente}>\r\n    +\r\n  </button>\r\n</div>\r\n\r\n\r\n\r\n\r\n<div>\r\n      <div className='Campovacio'>\r\n        <label htmlFor=\"Actividad\">Actividad:</label>\r\n        <div className=\"ColorCampoVacio\">*</div>\r\n      </div>\r\n\r\n      {/* Componente del modal */}\r\n      <div className=\"AlinicaionModal\">\r\n        <ModalActividad\r\n          mostrar={mostrarVentanaActividad}\r\n          cerrar={cerrarVentanaActividadEmergente}\r\n          actividad={actividad}\r\n          fechaInicio={fechaInicio}\r\n          fechaFin={fechaFin}\r\n          horaInicio={horaInicio}\r\n          ubicacion={ubicacion}\r\n          modalidad={modalidad}\r\n          descripcionActividad={descripcionActividad}\r\n          setActividad={setActividad}\r\n          setFechaInicio={setFechaInicio}\r\n          setFechaFin={setFechaFin}\r\n          setHoraInicio={setHoraInicio}\r\n          setUbicacion={setUbicacion}\r\n          setModalidad={setModalidad}\r\n          setDescripcionActividad={setDescripcionActividad}\r\n          agregarActividad={agregarActividad}\r\n        />\r\n      </div>\r\n\r\n      {/* Renderización de actividades */}\r\n      <div className=\"Reglas\">\r\n        <div className=\"distribucionReque\">\r\n          {actividades.length > 0 &&\r\n            actividades.map((actividades, index) => (\r\n              <div key={index} className=\"Acividades\">\r\n                {/* Mostrar detalles de la actividad */}\r\n                <input type=\"text\" placeholder=\"Actividad\" value={actividades.nombre} readOnly />\r\n                {/* Botón para eliminar la actividad */}\r\n                <button type=\"button\" onClick={() => eliminarActividad(index)} className=\"BotRequisitos\">\r\n                  <img src=\"https://cdn-icons-png.flaticon.com/512/6722/6722986.png\" alt=\"\" className=\"iconoEliminar\" />\r\n                </button>\r\n              </div>\r\n            ))}\r\n          <div className=\"Reglas\"></div>\r\n        </div>\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n      <div className=\"ConfbuttonRequisitos\">\r\n        <button className=\"buttonRequisitos1\" type=\"button\" onClick={mostrarVentanaActividadEmergente}>\r\n          +\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <div className=\"Participantes\">\r\n        <div>\r\n          <label>Participación</label>\r\n          <div>\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"participacion\"\r\n                value=\"Individual\"\r\n                checked={participacion === \"Individual\"}\r\n                onChange={(e) => (setParticipacion(e.target.value), setMostrarParticipacion(false))}\r\n                onBlur={() => (setParticipacionError(participacion.trim() === \"\"), setMostrarParticipacion(false))}\r\n                className={participacionError ? \"campo-vacio\" : \"\"}\r\n              />\r\n              Individual\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <label>\r\n              <input\r\n                type=\"radio\"\r\n                name=\"participacion\"\r\n                value=\"Grupal\"\r\n                checked={participacion === \"Grupal\"}\r\n                onChange={(e) => (setParticipacion(e.target.value), setMostrarParticipacion(true))}\r\n                onBlur={() => (setParticipacionError(participacion.trim() === \"\"), setMostrarParticipacion(true))}\r\n                className={participacionError ? \"campo-vacio\" : \"\"}\r\n              />\r\n              Grupal\r\n            </label>\r\n          </div>\r\n          \r\n        </div >\r\n        \r\n\r\n        \r\n        \r\n        {MostrarParticipacion &&\r\n        <div className='Participantes1'>\r\n       <div>\r\n          <div className=\"errorInf\">\r\n            <label htmlFor=\"numParticipantes\">Número de participantes</label>\r\n            {numParticipantesError && <p>*</p>}\r\n          </div> \r\n          <input\r\n            type=\"text\"\r\n            id=\"numParticipantes\"\r\n            name=\"numParticipantes\"\r\n            placeholder=\"Número de participantes\"\r\n            value={numParticipantes}\r\n            onChange={(e) => setNumParticipantes(e.target.value)}\r\n            onBlur={() => setnumParticipantesError(numParticipantes.trim() === \"\")}\r\n            className={numParticipantesError ? \"campo-vacio\" : \"\"}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n\r\n          <div className=\"errorInf\">\r\n          <label htmlFor=\"numEntrenadores\">Número de entrenadores</label>\r\n          {numEntrenadoresError && <p>*</p>}\r\n          </div> \r\n          <input\r\n            type=\"text\"\r\n            id=\"numEntrenadores\"\r\n            name=\"numEntrenadores\"\r\n            placeholder=\"Número de entrenadores\"\r\n            value={numEntrenadores}\r\n            onChange={(e) => setNumEntrenadores(e.target.value)}\r\n            onBlur={() => setNumEntrenadoresError(numEntrenadores.trim() === \"\")}\r\n            className={numEntrenadoresError ? \"campo-vacio\" : \"\"}\r\n            required\r\n          />\r\n        </div>\r\n        </div>\r\n      }\r\n\r\n        \r\n        \r\n      </div>\r\n\r\n      \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n      \r\n\r\n\r\n     \r\n\r\n\r\n      <div className=\"container\">\r\n        <div className=\"other-elements\"></div>\r\n        <div>\r\n          <button className=\"tweet-button\" type=\"submit\" onClick={handleButtonCancelarCE}>\r\n            Atras\r\n          </button>\r\n          <button className=\"tweet-button\" type=\"submit\" onClick={handleSubmit}>\r\n            Guardar\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {(mostrarModalSalir) && (\r\n        <ModalCreacionEvento message=\"Crear Evento\" onClose={handleButtonCancelarCE} />\r\n          \r\n        )}\r\n  </form>\r\n  );\r\n};\r\n\r\nexport default EventForm;\r\n\r\n\r\n\r\n/** import React, { useState } from 'react';\r\n\r\nconst ListaActividades = () => {\r\n  const [actividades, setActividades] = useState([]);\r\n  const [nuevaActividad, setNuevaActividad] = useState('');\r\n  const [fechaInicio, setFechaInicio] = useState('null');\r\n  const [fechaFin, setFechaFin] = useState('null');\r\n  const [actividadError, setActividadError] = useState(false);\r\n  const [fechaInicioError, setFechaInicioError] = useState(false);\r\n  const [fechaFinError, setFechaFinError] = useState(false);\r\n\r\n  const agregarActividad = () => {\r\n    if (nuevaActividad.trim() === '' || fechaInicio.trim() === 'null' || fechaFin.trim() === 'null') {\r\n      setActividadError(nuevaActividad.trim() === '');\r\n      setFechaInicioError(fechaInicio.trim() === 'null');\r\n      setFechaFinError(fechaFin.trim() === 'null');\r\n      return;\r\n    }\r\n\r\n    setActividades([...actividades, { nombre: nuevaActividad, fechaInicio, fechaFin }]);\r\n    setNuevaActividad('');\r\n    setFechaInicio('null');\r\n    setFechaFin('null');\r\n    setActividadError(false);\r\n    setFechaInicioError(false);\r\n    setFechaFinError(false);\r\n  };\r\n\r\n  const eliminarActividad = (index) => {\r\n    const nuevasActividades = [...actividades];\r\n    nuevasActividades.splice(index, 1);\r\n    setActividades(nuevasActividades);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Actividades\">\r\n      <fieldset className=\"role-fieldset\">\r\n        <legend>Actividades</legend>\r\n        <div className=\"radio-group\">\r\n          {actividades.map((actividad, index) => (\r\n            <div key={index} className=\"Actividades\">\r\n              <div className=\"errorInf\">\r\n                <label htmlFor=\"Actividad\">Nombre de la actividad</label>\r\n                <p>*</p>\r\n              </div>\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"actividad\"\r\n                value={actividad.nombre}\r\n                readOnly\r\n              />\r\n\r\n              <div className=\"Fecha\">\r\n                <div className=\"FechaInicio\">\r\n                  <div className=\"errorInf\">\r\n                    <label htmlFor=\"fecha-inicio\">Fecha Inicio</label>\r\n                    <p>*</p>\r\n                  </div>\r\n                  <input\r\n                    className={`FechaDesing ${fechaInicioError ? 'campo-vacio' : 'null'}`}\r\n                    type=\"date\"\r\n                    value={actividad.fechaInicio}\r\n                    readOnly\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"FechaFinal\">\r\n                  <div className=\"errorInf\">\r\n                    <label htmlFor=\"fecha-fin\">Fecha Fin </label>\r\n                    <p>*</p>\r\n                  </div>\r\n                  <input\r\n                    className={`FechaDesing ${fechaFinError ? 'campo-vacio' : 'null'}`}\r\n                    type=\"date\"\r\n                    value={actividad.fechaFin}\r\n                    readOnly\r\n                  />\r\n                </div>\r\n              </div>\r\n              <button type=\"button\" onClick={() => eliminarActividad(index)} className=\"BotRequisitos\">\r\n                Eliminar\r\n              </button>\r\n            </div>\r\n          ))}\r\n          <div className=\"Actividades\">\r\n            <div className=\"errorInf\">\r\n              <label htmlFor=\"Actividad\">Nombre de la actividad</label>\r\n              {actividadError && <p>*</p>}\r\n            </div>\r\n            <input\r\n              type=\"text\"\r\n              id=\"actividad\"\r\n              placeholder=\"actividad\"\r\n              value={nuevaActividad}\r\n              onChange={(e) => setNuevaActividad(e.target.value)}\r\n              onBlur={() => setActividadError(nuevaActividad.trim() === '')}\r\n              className={actividadError ? 'campo-vacio' : ''}\r\n              required\r\n            />\r\n\r\n            <div className=\"Fecha\">\r\n              <div className=\"FechaInicio\">\r\n                <div className=\"errorInf\">\r\n                  <label htmlFor=\"fecha-inicio\">Fecha Inicio</label>\r\n                  {fechaInicioError && <p>*</p>}\r\n                </div>\r\n                <input\r\n                  className={`FechaDesing ${fechaInicioError ? 'campo-vacio' : 'null'}`}\r\n                  type=\"date\"\r\n                  value={fechaInicio}\r\n                  onChange={(e) => setFechaInicio(e.target.value)}\r\n                  onBlur={() => setFechaInicioError(fechaInicio.trim() === 'null')}\r\n                  required\r\n                />\r\n              </div>\r\n\r\n              <div className=\"FechaFinal\">\r\n                <div className=\"errorInf\">\r\n                  <label htmlFor=\"fecha-fin\">Fecha Fin </label>\r\n                  {fechaFinError && <p>*</p>}\r\n                </div>\r\n                <input\r\n                  className={`FechaDesing ${fechaFinError ? 'campo-vacio' : 'null'}`}\r\n                  type=\"date\"\r\n                  value={fechaFin}\r\n                  onChange={(e) => setFechaFin(e.target.value)}\r\n                  onBlur={() => setFechaFinError(fechaFin.trim() === 'null')}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <button type=\"button\" onClick={agregarActividad} className=\"BotRequisitos\">\r\n              Agregar\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </fieldset>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListaActividades;\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <div className=\"Reglas\">\r\n      <div className=\"Campovacio\">\r\n        <label htmlFor=\"reglas\">Reglas:</label>\r\n        <div className=\"ColorCampoVacio\">*</div>\r\n      </div>\r\n      <div className=\"distribucionReque\">\r\n        {reglas.map((regla, index) => (\r\n          <div key={index} className=\"Requisitos\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Regla del evento\"\r\n              value={regla}\r\n              onChange={(e) => {\r\n                const nuevasReglas = [...reglas];\r\n                nuevasReglas[index] = e.target.value;\r\n                setReglas(nuevasReglas);\r\n              }}\r\n              required\r\n            />\r\n            <button type=\"button\" onClick={() => eliminarRegla(index)} className=\"BotRequisitos\">\r\n             <img src=\"https://cdn-icons-png.flaticon.com/512/6722/6722986.png\" alt=\"\" className=\"iconoEliminar\"/>\r\n            </button>\r\n            <button type=\"button\" onClick={agregarRegla} className=\"BotRequisitos\">\r\n              +\r\n            </button>\r\n          </div>\r\n        ))}\r\n        <div className=\"Requisitos\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"reglas\"\r\n            name=\"reglas\"\r\n            placeholder=\"Nueva regla\"\r\n            value={nuevaRegla}\r\n            onChange={(e) => setNuevaRegla(e.target.value)}\r\n            required\r\n          />\r\n          <button type=\"button\" onClick={() => eliminarRegla(index)} className=\"BotRequisitos\">\r\n            <img src=\"https://cdn-icons-png.flaticon.com/512/6722/6722986.png\" alt=\"\" className=\"iconoEliminar\"/>\r\n          </button>\r\n          <button type=\"button\" onClick={agregarRegla} className=\"BotRequisitos\">\r\n            +\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>             \r\n\r\n*/"],"mappings":"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AA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTrI,OAAA;UAAQgI,SAAS,EAAC,cAAc;UAACO,IAAI,EAAC,QAAQ;UAACmB,OAAO,EAAE1C,YAAa;UAAAiB,QAAA,EAAC;QAEtE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EACJzG,iBAAiB,iBACjB5B,OAAA,CAACH,mBAAmB;MAACiI,OAAO,EAAC,cAAc;MAACiC,OAAO,EAAE7E;IAAuB;MAAAgD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAE7E;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAET,CAAC;AAAClI,EAAA,CAjhBIF,SAAS;AAAA+J,EAAA,GAAT/J,SAAS;AAmhBf,eAAeA,SAAS;;AAIxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnMA,IAAA+J,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}