{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evita\\\\Desktop\\\\TIS0.2\\\\AdministradorDeEventos\\\\frontend\\\\src\\\\components\\\\CalendarioDesplegable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport '../components/assets/MyCalendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst localizer = momentLocalizer(moment);\nconst MiCalendario = ({\n  fechaInicio,\n  fechaFin\n}) => {\n  _s();\n  const [eventos, setEventos] = useState([{\n    title: 'Evento 1',\n    start: new Date(2023, 11, 20, 10, 0),\n    // Fecha y hora de inicio\n    end: new Date(2024, 0, 10, 12, 0) // Fecha y hora de fin\n  }\n  // Agrega más eventos según tus necesidades\n  ]);\n\n  const customDayPropGetter = date => {\n    const customStyle = {};\n\n    // Define la fecha que deseas destacar\n    const fechaEspecifica = new Date(fech); // Año, mes (0-11), día\n    if (moment(date).isSame(fechaEspecifica, 'day')) {\n      customStyle.backgroundColor = 'pink'; // Color de fondo rosa\n    }\n\n    return {\n      style: customStyle\n    };\n  };\n  const dayStyleGetter = date => {\n    // Comprueba si hay eventos en la fecha actual\n    const hasEvents = eventos.some(evento => {\n      const eventStartDate = new Date(evento.start);\n      const eventEndDate = new Date(evento.end);\n      return date >= eventStartDate && date <= eventEndDate;\n    });\n\n    // Si hay eventos, aplica un fondo rosa, de lo contrario, no hace cambios\n    return hasEvents ? {\n      style: {\n        backgroundColor: 'pink'\n      }\n    } : {};\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mi-contenedor\",\n    children: /*#__PURE__*/_jsxDEV(Calendar, {\n      localizer: localizer,\n      events: eventos,\n      startAccessor: \"start\",\n      endAccessor: \"end\",\n      className: \"mi-calendario\",\n      views: ['month', 'agenda'],\n      toolbar: true\n      //eventPropGetter={eventStyleGetter}\n      ,\n      dayPropGetter: date => {\n        const customStyle = customDayPropGetter(date).style;\n        const eventStyle = dayStyleGetter(date).style;\n        return {\n          style: {\n            ...customStyle,\n            ...eventStyle\n          }\n        };\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(MiCalendario, \"Pbf1SyqeW4IBhk1G0Wblw1V0apg=\");\n_c = MiCalendario;\nexport default MiCalendario;\nvar _c;\n$RefreshReg$(_c, \"MiCalendario\");","map":{"version":3,"names":["React","useState","Calendar","momentLocalizer","moment","jsxDEV","_jsxDEV","localizer","MiCalendario","fechaInicio","fechaFin","_s","eventos","setEventos","title","start","Date","end","customDayPropGetter","date","customStyle","fechaEspecifica","fech","isSame","backgroundColor","style","dayStyleGetter","hasEvents","some","evento","eventStartDate","eventEndDate","className","children","events","startAccessor","endAccessor","views","toolbar","dayPropGetter","eventStyle","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Evita/Desktop/TIS0.2/AdministradorDeEventos/frontend/src/components/CalendarioDesplegable.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport '../components/assets/MyCalendar.css';\r\n\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst MiCalendario = ({ fechaInicio, fechaFin }) => {\r\n  const [eventos, setEventos] = useState([\r\n    {\r\n      title: 'Evento 1',\r\n      start: new Date(2023, 11, 20, 10, 0), // Fecha y hora de inicio\r\n      end: new Date(2024, 0, 10, 12, 0),   // Fecha y hora de fin\r\n    },\r\n    // Agrega más eventos según tus necesidades\r\n  ]);\r\n\r\n \r\n  const customDayPropGetter = (date) => {\r\n    const customStyle = {};\r\n\r\n    // Define la fecha que deseas destacar\r\n    const fechaEspecifica = new Date(fech); // Año, mes (0-11), día\r\n    if (moment(date).isSame(fechaEspecifica, 'day')) {\r\n      customStyle.backgroundColor = 'pink'; // Color de fondo rosa\r\n    }\r\n\r\n    return {\r\n      style: customStyle,\r\n    };\r\n  };\r\n\r\n  const dayStyleGetter = (date) => {\r\n    // Comprueba si hay eventos en la fecha actual\r\n    const hasEvents = eventos.some(evento => {\r\n      const eventStartDate = new Date(evento.start);\r\n      const eventEndDate = new Date(evento.end);\r\n      return date >= eventStartDate && date <= eventEndDate;\r\n    });\r\n\r\n    // Si hay eventos, aplica un fondo rosa, de lo contrario, no hace cambios\r\n    return hasEvents ? { style: { backgroundColor: 'pink' } } : {};\r\n  };\r\n\r\n  return (\r\n    <div className=\"mi-contenedor\">\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={eventos}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        className=\"mi-calendario\"\r\n        views={['month', 'agenda']}\r\n        toolbar={true}\r\n        //eventPropGetter={eventStyleGetter}\r\n        dayPropGetter={(date) => {\r\n          const customStyle = customDayPropGetter(date).style;\r\n          const eventStyle = dayStyleGetter(date).style;\r\n          return { style: { ...customStyle, ...eventStyle } };\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MiCalendario;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,QAAQ,EAAEC,eAAe,QAAQ,oBAAoB;AAC9D,OAAOC,MAAM,MAAM,QAAQ;AAC3B,OAAO,mDAAmD;AAC1D,OAAO,qCAAqC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,SAAS,GAAGJ,eAAe,CAACC,MAAM,CAAC;AAEzC,MAAMI,YAAY,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAClD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,CACrC;IACEa,KAAK,EAAE,UAAU;IACjBC,KAAK,EAAE,IAAIC,IAAI,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IAAE;IACtCC,GAAG,EAAE,IAAID,IAAI,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAI;EACvC;EACA;EAAA,CACD,CAAC;;EAGF,MAAME,mBAAmB,GAAIC,IAAI,IAAK;IACpC,MAAMC,WAAW,GAAG,CAAC,CAAC;;IAEtB;IACA,MAAMC,eAAe,GAAG,IAAIL,IAAI,CAACM,IAAI,CAAC,CAAC,CAAC;IACxC,IAAIlB,MAAM,CAACe,IAAI,CAAC,CAACI,MAAM,CAACF,eAAe,EAAE,KAAK,CAAC,EAAE;MAC/CD,WAAW,CAACI,eAAe,GAAG,MAAM,CAAC,CAAC;IACxC;;IAEA,OAAO;MACLC,KAAK,EAAEL;IACT,CAAC;EACH,CAAC;EAED,MAAMM,cAAc,GAAIP,IAAI,IAAK;IAC/B;IACA,MAAMQ,SAAS,GAAGf,OAAO,CAACgB,IAAI,CAACC,MAAM,IAAI;MACvC,MAAMC,cAAc,GAAG,IAAId,IAAI,CAACa,MAAM,CAACd,KAAK,CAAC;MAC7C,MAAMgB,YAAY,GAAG,IAAIf,IAAI,CAACa,MAAM,CAACZ,GAAG,CAAC;MACzC,OAAOE,IAAI,IAAIW,cAAc,IAAIX,IAAI,IAAIY,YAAY;IACvD,CAAC,CAAC;;IAEF;IACA,OAAOJ,SAAS,GAAG;MAAEF,KAAK,EAAE;QAAED,eAAe,EAAE;MAAO;IAAE,CAAC,GAAG,CAAC,CAAC;EAChE,CAAC;EAED,oBACElB,OAAA;IAAK0B,SAAS,EAAC,eAAe;IAAAC,QAAA,eAC5B3B,OAAA,CAACJ,QAAQ;MACPK,SAAS,EAAEA,SAAU;MACrB2B,MAAM,EAAEtB,OAAQ;MAChBuB,aAAa,EAAC,OAAO;MACrBC,WAAW,EAAC,KAAK;MACjBJ,SAAS,EAAC,eAAe;MACzBK,KAAK,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAE;MAC3BC,OAAO,EAAE;MACT;MAAA;MACAC,aAAa,EAAGpB,IAAI,IAAK;QACvB,MAAMC,WAAW,GAAGF,mBAAmB,CAACC,IAAI,CAAC,CAACM,KAAK;QACnD,MAAMe,UAAU,GAAGd,cAAc,CAACP,IAAI,CAAC,CAACM,KAAK;QAC7C,OAAO;UAAEA,KAAK,EAAE;YAAE,GAAGL,WAAW;YAAE,GAAGoB;UAAW;QAAE,CAAC;MACrD;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjC,EAAA,CAxDIH,YAAY;AAAAqC,EAAA,GAAZrC,YAAY;AA0DlB,eAAeA,YAAY;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}