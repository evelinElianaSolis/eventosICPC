{"ast":null,"code":"// Componente de validaciones\nconst errorCaracteresNoPermitidos = 'Esta intentando ingresar un caracter no permitido';\nconst errorOchoCaracteres = 'Este campo no puede superar los 8 caracteres';\nconst errorTreintaCaracteres = 'Este campo no puede superar los 30 caracteres';\nconst errorCincuentaCaracteres = 'Este campo no puede superar los 50 caracteres';\nconst errorSieteCaracteres = 'Este campo no puede ser menor a los 7 caracteres';\nconst errorSoloNumeros = 'Solo se permiten caracteres numéricos';\nconst errorSeleccioneUnaOpcion = 'Seleccione al menos una opción';\nconst errorCorreo = 'Ingrese un correo válido en el formato example@dominio.com';\nconst errorCorreoCar = 'Los caracteres espeviales que intenta ingresar son invalidos';\nconst Validaciones = {\n  validarCampoVacio: valor => {\n    if (!valor.trim()) {\n      return `Este campo no puede estar vacío.`;\n    } else {\n      return \"\";\n    }\n  },\n  validarCampoVacioSeleccionEquipo: valor => {\n    if (!valor.trim() || valor == \"Selecciona\") {\n      return `Este campo no puede estar vacío.`;\n    } else {\n      return \"\";\n    }\n  },\n  validarNombre: nombre => {\n    const newValueAlpha = nombre.replace(/[^a-zA-Z\\s]/g, '').substring(0, 30);\n    if (nombre.length > 30) {\n      return errorTreintaCaracteres;\n    } else if (newValueAlpha !== nombre) {\n      return errorCaracteresNoPermitidos;\n    } else {\n      return '';\n    }\n  },\n  validarEquipo: nombre => {\n    const caracteresNoPermitidos = /[()\\/\\\\,;{}\\[\\]^?]/;\n    if (nombre.length > 30) {\n      return errorTreintaCaracteres;\n    } else if (caracteresNoPermitidos.test(nombre)) {\n      return errorCaracteresNoPermitidos;\n    } else {\n      return '';\n    }\n  },\n  devolverNombre: data => {\n    const newValueAlpha = data.replace(/[^a-zA-Z\\s]/g, '').substring(0, 30);\n    return newValueAlpha;\n  },\n  validarApellido: apellido => {\n    const apellidoRegex = /^[A-Za-z]{3,30}$/;\n    if (!apellidoRegex.test(apellido)) {\n      return \"Por favor, ingrese un apellido válido (entre 3 y 30 caracteres alfabéticos, sin espacios).\";\n    } else {\n      return \"\";\n    }\n  },\n  validarCI: CI => {\n    const newValueID = CI.replace(/[^\\d]/g, '').substring(0, 8);\n    if (CI.length > 8) {\n      return errorOchoCaracteres;\n    } else if (newValueID !== CI) {\n      return errorSoloNumeros;\n    } else if (CI.length < 7) {\n      return errorSieteCaracteres;\n    } else {\n      return \"\";\n    }\n  },\n  devolverCI: ciDev => {\n    const newValueID = ciDev.replace(/[^\\d]/g, '').substring(0, 8);\n    return newValueID;\n  },\n  validarCorreo: correo => {\n    const correoRegex = /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/;\n    if (correo.length > 50) {\n      return errorCincuentaCaracteres;\n    } else if (!correoRegex.test(correo)) {\n      return errorCorreo;\n    } else {\n      return \"\";\n    }\n  },\n  devolverCorreo: correo => {\n    const cor = correo.replace(/[^a-zA-Z0-9_.@-]/g, '');\n    return cor;\n  },\n  validarGenero: genero => {\n    if (genero !== \"F\" && genero !== \"M\") {\n      return \"Por favor, seleccione un género válido.\";\n    } else {\n      return \"\";\n    }\n  },\n  validarTelefono: telefono => {\n    const telefonoRegex = /^\\d{1,8}$/;\n    if (!telefonoRegex.test(telefono)) {\n      return \"Por favor, ingrese un número de teléfono válido (máximo 8 dígitos).\";\n    } else {\n      return \"\";\n    }\n  }\n};\nexport default Validaciones;","map":{"version":3,"names":["errorCaracteresNoPermitidos","errorOchoCaracteres","errorTreintaCaracteres","errorCincuentaCaracteres","errorSieteCaracteres","errorSoloNumeros","errorSeleccioneUnaOpcion","errorCorreo","errorCorreoCar","Validaciones","validarCampoVacio","valor","trim","validarCampoVacioSeleccionEquipo","validarNombre","nombre","newValueAlpha","replace","substring","length","validarEquipo","caracteresNoPermitidos","test","devolverNombre","data","validarApellido","apellido","apellidoRegex","validarCI","CI","newValueID","devolverCI","ciDev","validarCorreo","correo","correoRegex","devolverCorreo","cor","validarGenero","genero","validarTelefono","telefono","telefonoRegex"],"sources":["C:/Users/Evita/Desktop/TIS0.2/AdministradorDeEventos/frontend/src/components/utils/Validaciones.jsx"],"sourcesContent":["// Componente de validaciones\r\nconst errorCaracteresNoPermitidos='Esta intentando ingresar un caracter no permitido';\r\nconst errorOchoCaracteres='Este campo no puede superar los 8 caracteres';\r\nconst errorTreintaCaracteres='Este campo no puede superar los 30 caracteres';\r\nconst errorCincuentaCaracteres='Este campo no puede superar los 50 caracteres';\r\nconst errorSieteCaracteres='Este campo no puede ser menor a los 7 caracteres';\r\nconst errorSoloNumeros='Solo se permiten caracteres numéricos';\r\nconst errorSeleccioneUnaOpcion='Seleccione al menos una opción';\r\nconst errorCorreo='Ingrese un correo válido en el formato example@dominio.com';\r\nconst errorCorreoCar='Los caracteres espeviales que intenta ingresar son invalidos';\r\nconst Validaciones = {\r\n  validarCampoVacio: (valor) => {\r\n    if (!valor.trim()) {\r\n      return `Este campo no puede estar vacío.`;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  },\r\n  validarCampoVacioSeleccionEquipo: (valor) => {\r\n    if (!valor.trim() || valor==\"Selecciona\") {\r\n      return `Este campo no puede estar vacío.`;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  },\r\n \r\n   validarNombre: (nombre) => {\r\n      const newValueAlpha = nombre.replace(/[^a-zA-Z\\s]/g, '').substring(0, 30);\r\n          \r\n      if (nombre.length > 30) {\r\n      return errorTreintaCaracteres;\r\n      } else if (newValueAlpha !== nombre) {\r\n        return errorCaracteresNoPermitidos;       \r\n      } else {\r\n        return '';\r\n      }\r\n    },\r\n    validarEquipo : (nombre) => {\r\n      const caracteresNoPermitidos = /[()\\/\\\\,;{}\\[\\]^?]/;\r\n    \r\n      if (nombre.length > 30) {\r\n        return errorTreintaCaracteres;\r\n      } else if (caracteresNoPermitidos.test(nombre)) {\r\n        return errorCaracteresNoPermitidos;\r\n      } else {\r\n        return '';\r\n      }\r\n    },\r\n\r\n  devolverNombre:(data)=>{\r\n    const newValueAlpha = data.replace(/[^a-zA-Z\\s]/g, '').substring(0, 30);\r\n    return newValueAlpha;\r\n  },\r\n\r\n\r\n  validarApellido: (apellido) => {\r\n    const apellidoRegex = /^[A-Za-z]{3,30}$/;\r\n\r\n    if (!apellidoRegex.test(apellido)) {\r\n      return \"Por favor, ingrese un apellido válido (entre 3 y 30 caracteres alfabéticos, sin espacios).\";\r\n    } else {\r\n      return \"\";\r\n    }\r\n  },\r\n    validarCI: (CI) => {\r\n      const newValueID = CI.replace(/[^\\d]/g, '').substring(0, 8);\r\n\r\n\r\n      if (CI.length > 8) {\r\n        return errorOchoCaracteres;\r\n      } else if (newValueID !== CI) {\r\n        return errorSoloNumeros;        \r\n      } else if (CI.length < 7) {\r\n         return errorSieteCaracteres;\r\n      } else {\r\n        return \"\";}\r\n    },\r\n\r\n    devolverCI:(ciDev)=>{\r\n      const newValueID = ciDev.replace(/[^\\d]/g, '').substring(0, 8);\r\n      return newValueID;\r\n    },\r\n\r\n  validarCorreo: (correo) => {\r\n\r\n    const correoRegex = /^[a-zA-Z0-9_.-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/;\r\n\r\n           if (correo.length > 50) {\r\n          return errorCincuentaCaracteres;\r\n        } else if (!correoRegex.test(correo)) {\r\n          return errorCorreo;\r\n        } else{\r\n           return \"\";\r\n        }\r\n  },\r\n\r\n  devolverCorreo:(correo)=>{\r\n    const cor=correo.replace(/[^a-zA-Z0-9_.@-]/g, '');\r\n    return cor;\r\n  },\r\n  validarGenero: (genero) => {\r\n    if (genero !== \"F\" && genero !== \"M\") {\r\n      return \"Por favor, seleccione un género válido.\";\r\n    } else {\r\n      return \"\";\r\n    }\r\n  },\r\n  validarTelefono: (telefono) => {\r\n    const telefonoRegex = /^\\d{1,8}$/;\r\n    if (!telefonoRegex.test(telefono)) {\r\n      return \"Por favor, ingrese un número de teléfono válido (máximo 8 dígitos).\";\r\n    } else {\r\n      return \"\";\r\n    }\r\n  },\r\n};\r\nexport default Validaciones;"],"mappings":"AAAA;AACA,MAAMA,2BAA2B,GAAC,mDAAmD;AACrF,MAAMC,mBAAmB,GAAC,8CAA8C;AACxE,MAAMC,sBAAsB,GAAC,+CAA+C;AAC5E,MAAMC,wBAAwB,GAAC,+CAA+C;AAC9E,MAAMC,oBAAoB,GAAC,kDAAkD;AAC7E,MAAMC,gBAAgB,GAAC,uCAAuC;AAC9D,MAAMC,wBAAwB,GAAC,gCAAgC;AAC/D,MAAMC,WAAW,GAAC,4DAA4D;AAC9E,MAAMC,cAAc,GAAC,8DAA8D;AACnF,MAAMC,YAAY,GAAG;EACnBC,iBAAiB,EAAGC,KAAK,IAAK;IAC5B,IAAI,CAACA,KAAK,CAACC,IAAI,CAAC,CAAC,EAAE;MACjB,OAAQ,kCAAiC;IAC3C,CAAC,MAAM;MACL,OAAO,EAAE;IACX;EACF,CAAC;EACDC,gCAAgC,EAAGF,KAAK,IAAK;IAC3C,IAAI,CAACA,KAAK,CAACC,IAAI,CAAC,CAAC,IAAID,KAAK,IAAE,YAAY,EAAE;MACxC,OAAQ,kCAAiC;IAC3C,CAAC,MAAM;MACL,OAAO,EAAE;IACX;EACF,CAAC;EAEAG,aAAa,EAAGC,MAAM,IAAK;IACxB,MAAMC,aAAa,GAAGD,MAAM,CAACE,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;IAEzE,IAAIH,MAAM,CAACI,MAAM,GAAG,EAAE,EAAE;MACxB,OAAOjB,sBAAsB;IAC7B,CAAC,MAAM,IAAIc,aAAa,KAAKD,MAAM,EAAE;MACnC,OAAOf,2BAA2B;IACpC,CAAC,MAAM;MACL,OAAO,EAAE;IACX;EACF,CAAC;EACDoB,aAAa,EAAIL,MAAM,IAAK;IAC1B,MAAMM,sBAAsB,GAAG,oBAAoB;IAEnD,IAAIN,MAAM,CAACI,MAAM,GAAG,EAAE,EAAE;MACtB,OAAOjB,sBAAsB;IAC/B,CAAC,MAAM,IAAImB,sBAAsB,CAACC,IAAI,CAACP,MAAM,CAAC,EAAE;MAC9C,OAAOf,2BAA2B;IACpC,CAAC,MAAM;MACL,OAAO,EAAE;IACX;EACF,CAAC;EAEHuB,cAAc,EAAEC,IAAI,IAAG;IACrB,MAAMR,aAAa,GAAGQ,IAAI,CAACP,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;IACvE,OAAOF,aAAa;EACtB,CAAC;EAGDS,eAAe,EAAGC,QAAQ,IAAK;IAC7B,MAAMC,aAAa,GAAG,kBAAkB;IAExC,IAAI,CAACA,aAAa,CAACL,IAAI,CAACI,QAAQ,CAAC,EAAE;MACjC,OAAO,4FAA4F;IACrG,CAAC,MAAM;MACL,OAAO,EAAE;IACX;EACF,CAAC;EACCE,SAAS,EAAGC,EAAE,IAAK;IACjB,MAAMC,UAAU,GAAGD,EAAE,CAACZ,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;IAG3D,IAAIW,EAAE,CAACV,MAAM,GAAG,CAAC,EAAE;MACjB,OAAOlB,mBAAmB;IAC5B,CAAC,MAAM,IAAI6B,UAAU,KAAKD,EAAE,EAAE;MAC5B,OAAOxB,gBAAgB;IACzB,CAAC,MAAM,IAAIwB,EAAE,CAACV,MAAM,GAAG,CAAC,EAAE;MACvB,OAAOf,oBAAoB;IAC9B,CAAC,MAAM;MACL,OAAO,EAAE;IAAC;EACd,CAAC;EAED2B,UAAU,EAAEC,KAAK,IAAG;IAClB,MAAMF,UAAU,GAAGE,KAAK,CAACf,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;IAC9D,OAAOY,UAAU;EACnB,CAAC;EAEHG,aAAa,EAAGC,MAAM,IAAK;IAEzB,MAAMC,WAAW,GAAG,iDAAiD;IAE9D,IAAID,MAAM,CAACf,MAAM,GAAG,EAAE,EAAE;MACzB,OAAOhB,wBAAwB;IACjC,CAAC,MAAM,IAAI,CAACgC,WAAW,CAACb,IAAI,CAACY,MAAM,CAAC,EAAE;MACpC,OAAO3B,WAAW;IACpB,CAAC,MAAK;MACH,OAAO,EAAE;IACZ;EACN,CAAC;EAED6B,cAAc,EAAEF,MAAM,IAAG;IACvB,MAAMG,GAAG,GAACH,MAAM,CAACjB,OAAO,CAAC,mBAAmB,EAAE,EAAE,CAAC;IACjD,OAAOoB,GAAG;EACZ,CAAC;EACDC,aAAa,EAAGC,MAAM,IAAK;IACzB,IAAIA,MAAM,KAAK,GAAG,IAAIA,MAAM,KAAK,GAAG,EAAE;MACpC,OAAO,yCAAyC;IAClD,CAAC,MAAM;MACL,OAAO,EAAE;IACX;EACF,CAAC;EACDC,eAAe,EAAGC,QAAQ,IAAK;IAC7B,MAAMC,aAAa,GAAG,WAAW;IACjC,IAAI,CAACA,aAAa,CAACpB,IAAI,CAACmB,QAAQ,CAAC,EAAE;MACjC,OAAO,qEAAqE;IAC9E,CAAC,MAAM;MACL,OAAO,EAAE;IACX;EACF;AACF,CAAC;AACD,eAAehC,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}