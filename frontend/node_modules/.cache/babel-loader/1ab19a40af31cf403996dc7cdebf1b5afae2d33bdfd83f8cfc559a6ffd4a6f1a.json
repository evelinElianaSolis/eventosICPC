{"ast":null,"code":"var clone = require('./clone');\nvar forOwn = require('../object/forOwn');\nvar kindOf = require('./kindOf');\nvar isPlainObject = require('./isPlainObject');\n\n/**\n * Recursively clone native types.\n */\nfunction deepClone(val, instanceClone) {\n  switch (kindOf(val)) {\n    case 'Object':\n      return cloneObject(val, instanceClone);\n    case 'Array':\n      return cloneArray(val, instanceClone);\n    default:\n      return clone(val);\n  }\n}\nfunction cloneObject(source, instanceClone) {\n  if (isPlainObject(source)) {\n    var out = {};\n    forOwn(source, function (val, key) {\n      this[key] = deepClone(val, instanceClone);\n    }, out);\n    return out;\n  } else if (instanceClone) {\n    return instanceClone(source);\n  } else {\n    return source;\n  }\n}\nfunction cloneArray(arr, instanceClone) {\n  var out = [],\n    i = -1,\n    n = arr.length,\n    val;\n  while (++i < n) {\n    out[i] = deepClone(arr[i], instanceClone);\n  }\n  return out;\n}\nmodule.exports = deepClone;","map":{"version":3,"names":["clone","require","forOwn","kindOf","isPlainObject","deepClone","val","instanceClone","cloneObject","cloneArray","source","out","key","arr","i","n","length","module","exports"],"sources":["C:/Users/Evita/Desktop/PruebaTis/eventosICPC/frontend/node_modules/mout/lang/deepClone.js"],"sourcesContent":["var clone = require('./clone');\nvar forOwn = require('../object/forOwn');\nvar kindOf = require('./kindOf');\nvar isPlainObject = require('./isPlainObject');\n\n    /**\n     * Recursively clone native types.\n     */\n    function deepClone(val, instanceClone) {\n        switch ( kindOf(val) ) {\n            case 'Object':\n                return cloneObject(val, instanceClone);\n            case 'Array':\n                return cloneArray(val, instanceClone);\n            default:\n                return clone(val);\n        }\n    }\n\n    function cloneObject(source, instanceClone) {\n        if (isPlainObject(source)) {\n            var out = {};\n            forOwn(source, function(val, key) {\n                this[key] = deepClone(val, instanceClone);\n            }, out);\n            return out;\n        } else if (instanceClone) {\n            return instanceClone(source);\n        } else {\n            return source;\n        }\n    }\n\n    function cloneArray(arr, instanceClone) {\n        var out = [],\n            i = -1,\n            n = arr.length,\n            val;\n        while (++i < n) {\n            out[i] = deepClone(arr[i], instanceClone);\n        }\n        return out;\n    }\n\n    module.exports = deepClone;\n\n\n\n"],"mappings":"AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAS,CAAC;AAC9B,IAAIC,MAAM,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AACxC,IAAIE,MAAM,GAAGF,OAAO,CAAC,UAAU,CAAC;AAChC,IAAIG,aAAa,GAAGH,OAAO,CAAC,iBAAiB,CAAC;;AAE1C;AACJ;AACA;AACI,SAASI,SAASA,CAACC,GAAG,EAAEC,aAAa,EAAE;EACnC,QAASJ,MAAM,CAACG,GAAG,CAAC;IAChB,KAAK,QAAQ;MACT,OAAOE,WAAW,CAACF,GAAG,EAAEC,aAAa,CAAC;IAC1C,KAAK,OAAO;MACR,OAAOE,UAAU,CAACH,GAAG,EAAEC,aAAa,CAAC;IACzC;MACI,OAAOP,KAAK,CAACM,GAAG,CAAC;EACzB;AACJ;AAEA,SAASE,WAAWA,CAACE,MAAM,EAAEH,aAAa,EAAE;EACxC,IAAIH,aAAa,CAACM,MAAM,CAAC,EAAE;IACvB,IAAIC,GAAG,GAAG,CAAC,CAAC;IACZT,MAAM,CAACQ,MAAM,EAAE,UAASJ,GAAG,EAAEM,GAAG,EAAE;MAC9B,IAAI,CAACA,GAAG,CAAC,GAAGP,SAAS,CAACC,GAAG,EAAEC,aAAa,CAAC;IAC7C,CAAC,EAAEI,GAAG,CAAC;IACP,OAAOA,GAAG;EACd,CAAC,MAAM,IAAIJ,aAAa,EAAE;IACtB,OAAOA,aAAa,CAACG,MAAM,CAAC;EAChC,CAAC,MAAM;IACH,OAAOA,MAAM;EACjB;AACJ;AAEA,SAASD,UAAUA,CAACI,GAAG,EAAEN,aAAa,EAAE;EACpC,IAAII,GAAG,GAAG,EAAE;IACRG,CAAC,GAAG,CAAC,CAAC;IACNC,CAAC,GAAGF,GAAG,CAACG,MAAM;IACdV,GAAG;EACP,OAAO,EAAEQ,CAAC,GAAGC,CAAC,EAAE;IACZJ,GAAG,CAACG,CAAC,CAAC,GAAGT,SAAS,CAACQ,GAAG,CAACC,CAAC,CAAC,EAAEP,aAAa,CAAC;EAC7C;EACA,OAAOI,GAAG;AACd;AAEAM,MAAM,CAACC,OAAO,GAAGb,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}