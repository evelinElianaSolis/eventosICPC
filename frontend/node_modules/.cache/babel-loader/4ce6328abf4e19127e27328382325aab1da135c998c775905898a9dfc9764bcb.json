{"ast":null,"code":"var kindOf = require('./kindOf');\nvar isPlainObject = require('./isPlainObject');\nvar mixIn = require('../object/mixIn');\n\n/**\r\n * Clone native types.\r\n */\nfunction clone(val) {\n  switch (kindOf(val)) {\n    case 'Object':\n      return cloneObject(val);\n    case 'Array':\n      return cloneArray(val);\n    case 'RegExp':\n      return cloneRegExp(val);\n    case 'Date':\n      return cloneDate(val);\n    default:\n      return val;\n  }\n}\nfunction cloneObject(source) {\n  if (isPlainObject(source)) {\n    return mixIn({}, source);\n  } else {\n    return source;\n  }\n}\nfunction cloneRegExp(r) {\n  var flags = '';\n  flags += r.multiline ? 'm' : '';\n  flags += r.global ? 'g' : '';\n  flags += r.ignoreCase ? 'i' : '';\n  return new RegExp(r.source, flags);\n}\nfunction cloneDate(date) {\n  return new Date(+date);\n}\nfunction cloneArray(arr) {\n  return arr.slice();\n}\nmodule.exports = clone;","map":{"version":3,"names":["kindOf","require","isPlainObject","mixIn","clone","val","cloneObject","cloneArray","cloneRegExp","cloneDate","source","r","flags","multiline","global","ignoreCase","RegExp","date","Date","arr","slice","module","exports"],"sources":["C:/Users/Jonatan/Desktop/Nueva carpeta (5)/eventosICPC/frontend/node_modules/mout/lang/clone.js"],"sourcesContent":["var kindOf = require('./kindOf');\r\nvar isPlainObject = require('./isPlainObject');\r\nvar mixIn = require('../object/mixIn');\r\n\r\n    /**\r\n     * Clone native types.\r\n     */\r\n    function clone(val){\r\n        switch (kindOf(val)) {\r\n            case 'Object':\r\n                return cloneObject(val);\r\n            case 'Array':\r\n                return cloneArray(val);\r\n            case 'RegExp':\r\n                return cloneRegExp(val);\r\n            case 'Date':\r\n                return cloneDate(val);\r\n            default:\r\n                return val;\r\n        }\r\n    }\r\n\r\n    function cloneObject(source) {\r\n        if (isPlainObject(source)) {\r\n            return mixIn({}, source);\r\n        } else {\r\n            return source;\r\n        }\r\n    }\r\n\r\n    function cloneRegExp(r) {\r\n        var flags = '';\r\n        flags += r.multiline ? 'm' : '';\r\n        flags += r.global ? 'g' : '';\r\n        flags += r.ignoreCase ? 'i' : '';\r\n        return new RegExp(r.source, flags);\r\n    }\r\n\r\n    function cloneDate(date) {\r\n        return new Date(+date);\r\n    }\r\n\r\n    function cloneArray(arr) {\r\n        return arr.slice();\r\n    }\r\n\r\n    module.exports = clone;\r\n\r\n\r\n"],"mappings":"AAAA,IAAIA,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;AAChC,IAAIC,aAAa,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAC9C,IAAIE,KAAK,GAAGF,OAAO,CAAC,iBAAiB,CAAC;;AAElC;AACJ;AACA;AACI,SAASG,KAAKA,CAACC,GAAG,EAAC;EACf,QAAQL,MAAM,CAACK,GAAG,CAAC;IACf,KAAK,QAAQ;MACT,OAAOC,WAAW,CAACD,GAAG,CAAC;IAC3B,KAAK,OAAO;MACR,OAAOE,UAAU,CAACF,GAAG,CAAC;IAC1B,KAAK,QAAQ;MACT,OAAOG,WAAW,CAACH,GAAG,CAAC;IAC3B,KAAK,MAAM;MACP,OAAOI,SAAS,CAACJ,GAAG,CAAC;IACzB;MACI,OAAOA,GAAG;EAClB;AACJ;AAEA,SAASC,WAAWA,CAACI,MAAM,EAAE;EACzB,IAAIR,aAAa,CAACQ,MAAM,CAAC,EAAE;IACvB,OAAOP,KAAK,CAAC,CAAC,CAAC,EAAEO,MAAM,CAAC;EAC5B,CAAC,MAAM;IACH,OAAOA,MAAM;EACjB;AACJ;AAEA,SAASF,WAAWA,CAACG,CAAC,EAAE;EACpB,IAAIC,KAAK,GAAG,EAAE;EACdA,KAAK,IAAID,CAAC,CAACE,SAAS,GAAG,GAAG,GAAG,EAAE;EAC/BD,KAAK,IAAID,CAAC,CAACG,MAAM,GAAG,GAAG,GAAG,EAAE;EAC5BF,KAAK,IAAID,CAAC,CAACI,UAAU,GAAG,GAAG,GAAG,EAAE;EAChC,OAAO,IAAIC,MAAM,CAACL,CAAC,CAACD,MAAM,EAAEE,KAAK,CAAC;AACtC;AAEA,SAASH,SAASA,CAACQ,IAAI,EAAE;EACrB,OAAO,IAAIC,IAAI,CAAC,CAACD,IAAI,CAAC;AAC1B;AAEA,SAASV,UAAUA,CAACY,GAAG,EAAE;EACrB,OAAOA,GAAG,CAACC,KAAK,CAAC,CAAC;AACtB;AAEAC,MAAM,CAACC,OAAO,GAAGlB,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}