{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Evita\\\\Desktop\\\\PruebaTis\\\\eventosICPC\\\\frontend\\\\src\\\\components\\\\ModalPersonaEncontrada.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './assets/ModalRegistroParticipantes.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Modal = ({\n  isOpen,\n  closeModal,\n  datos,\n  enviarCodigo,\n  verificarCodigo,\n  codigoEnviado\n}) => {\n  _s();\n  const [codigoIngresado, setCodigoIngresado] = useState('');\n  if (!isOpen) {\n    return null;\n  }\n  const handleYes = async () => {\n    await enviarCodigo(datos.correo);\n  };\n  const handleVerify = () => {\n    verificarCodigo(codigoIngresado);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\xBFUd. ya se ha registrado a un evento ICPC antes?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\" Este es su correo: \", datos.correo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), codigoEnviado ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: codigoIngresado,\n          onChange: e => setCodigoIngresado(e.target.value),\n          placeholder: \"Ingrese el c\\xF3digo enviado a su correo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), isModalOpenPersona && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal\",\n          children: codigoEnviado ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: codigoIngresado,\n              onChange: e => setCodigoIngresado(e.target.value),\n              placeholder: \"Ingresa el c\\xF3digo de verificaci\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleYes,\n              children: \"Si\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: enviarCodigoVerificacion,\n            children: \"Enviar C\\xF3digo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"boton-ok\",\n          onClick: handleVerify,\n          children: \"Verificar C\\xF3digo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"boton-ok\",\n          onClick: handleYes,\n          children: \"S\\xED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"boton-ok\",\n          onClick: closeModal,\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"cerrar\",\n        onClick: closeModal,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Modal, \"TuZ60gqVx3uTxRC/37nYEvd7GVc=\");\n_c = Modal;\nexport default Modal;\nvar _c;\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Modal","isOpen","closeModal","datos","enviarCodigo","verificarCodigo","codigoEnviado","_s","codigoIngresado","setCodigoIngresado","handleYes","correo","handleVerify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","isModalOpenPersona","onClick","enviarCodigoVerificacion","_c","$RefreshReg$"],"sources":["C:/Users/Evita/Desktop/PruebaTis/eventosICPC/frontend/src/components/ModalPersonaEncontrada.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './assets/ModalRegistroParticipantes.css'\r\n\r\nconst Modal = ({ isOpen, closeModal, datos, enviarCodigo, verificarCodigo, codigoEnviado }) => {\r\n  const [codigoIngresado, setCodigoIngresado] = useState('');\r\n\r\n  if (!isOpen) {\r\n    return null;\r\n  }\r\n\r\n  const handleYes = async () => {\r\n    await enviarCodigo(datos.correo);\r\n  };\r\n\r\n  const handleVerify = () => {\r\n    verificarCodigo(codigoIngresado);\r\n  }\r\n\r\n  return (\r\n    <div className='modal-container'>\r\n      <div className='modal-content'>\r\n        <h2>¿Ud. ya se ha registrado a un evento ICPC antes?</h2>\r\n        <strong> Este es su correo: {datos.correo}</strong>\r\n\r\n        {codigoEnviado ? (\r\n          <>\r\n            <input \r\n              type=\"text\" \r\n              value={codigoIngresado} \r\n              onChange={(e) => setCodigoIngresado(e.target.value)} \r\n              placeholder=\"Ingrese el código enviado a su correo\" \r\n            />\r\n             {isModalOpenPersona && (\r\n                <div className=\"modal\">\r\n                    {/* Contenido del modal */}\r\n                    {codigoEnviado ? (\r\n                        <>\r\n                            <input\r\n                                type=\"text\"\r\n                                value={codigoIngresado}\r\n                                onChange={(e) => setCodigoIngresado(e.target.value)}\r\n                                placeholder=\"Ingresa el código de verificación\"\r\n                            />\r\n                            <button onClick={handleYes}>Si</button>\r\n                        </>\r\n                    ) : (\r\n                        <button onClick={enviarCodigoVerificacion}>Enviar Código</button>\r\n                    )}\r\n                </div>\r\n            )}\r\n            <button className='boton-ok' onClick={handleVerify}>Verificar Código</button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <button className='boton-ok' onClick={handleYes}>Sí</button>\r\n            <button className='boton-ok' onClick={closeModal}>No</button>\r\n          </>\r\n        )}\r\n\r\n        <span className=\"cerrar\" onClick={closeModal}>&times;</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}