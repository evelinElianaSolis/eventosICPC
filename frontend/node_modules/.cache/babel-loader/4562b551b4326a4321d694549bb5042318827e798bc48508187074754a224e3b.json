{"ast":null,"code":"/**\r\n * Check if both arguments are egal.\r\n */\nfunction is(x, y) {\n  // implementation borrowed from harmony:egal spec\n  if (x === y) {\n    // 0 === -0, but they are not identical\n    return x !== 0 || 1 / x === 1 / y;\n  }\n\n  // NaN !== NaN, but they are identical.\n  // NaNs are the only non-reflexive value, i.e., if x !== x,\n  // then x is a NaN.\n  // isNaN is broken: it converts its argument to number, so\n  // isNaN(\"foo\") => true\n  return x !== x && y !== y;\n}\nmodule.exports = is;","map":{"version":3,"names":["is","x","y","module","exports"],"sources":["C:/Users/Evita/Desktop/PruebaTis/eventosICPC/frontend/node_modules/mout/lang/is.js"],"sourcesContent":["\r\n\r\n    /**\r\n     * Check if both arguments are egal.\r\n     */\r\n    function is(x, y){\r\n        // implementation borrowed from harmony:egal spec\r\n        if (x === y) {\r\n          // 0 === -0, but they are not identical\r\n          return x !== 0 || 1 / x === 1 / y;\r\n        }\r\n\r\n        // NaN !== NaN, but they are identical.\r\n        // NaNs are the only non-reflexive value, i.e., if x !== x,\r\n        // then x is a NaN.\r\n        // isNaN is broken: it converts its argument to number, so\r\n        // isNaN(\"foo\") => true\r\n        return x !== x && y !== y;\r\n    }\r\n\r\n    module.exports = is;\r\n\r\n\r\n"],"mappings":"AAEI;AACJ;AACA;AACI,SAASA,EAAEA,CAACC,CAAC,EAAEC,CAAC,EAAC;EACb;EACA,IAAID,CAAC,KAAKC,CAAC,EAAE;IACX;IACA,OAAOD,CAAC,KAAK,CAAC,IAAI,CAAC,GAAGA,CAAC,KAAK,CAAC,GAAGC,CAAC;EACnC;;EAEA;EACA;EACA;EACA;EACA;EACA,OAAOD,CAAC,KAAKA,CAAC,IAAIC,CAAC,KAAKA,CAAC;AAC7B;AAEAC,MAAM,CAACC,OAAO,GAAGJ,EAAE"},"metadata":{},"sourceType":"script","externalDependencies":[]}